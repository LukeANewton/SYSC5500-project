<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//***********************************************************
// Variables
//***********************************************************
clock total_time;                                            // universal clock for total simulated time

const int total_devices =16;                                 // the number of devices in the network
const int timeout = 10;                                      // the maximum amount of time to wait for a login response
const int LIMIT = 32000;                                     // the maximum value for counting before whe need to roll over the counter

typedef int[1, total_devices] bot_id_t;                      // possible values for bot ids (akin to ip addresses)
typedef int[1, total_devices-1] bot_ip_t;
typedef int[101, 162] credentials_t;                         // possible values for credentials (akin to username/password combination)
typedef int[0, LIMIT] int_t;

urgent broadcast chan activate_first;                        // a channel to activate the first bot
urgent broadcast chan report;                                // a channel to notfy the CnC that there is a new device to infect
urgent broadcast chan dictionary_attack[total_devices];      // a channel for each device representing the attempted login on that device
urgent broadcast chan login_success[total_devices];          // a channel for each device representing the a successful login response to the attacking bot
broadcast chan load_binary[total_devices];                   // a channel for each device representing the command to begin secondary infection

int[0, total_devices] current_number_bots = 0;               // the number of infected devices at any given time
bool in_botnet[total_devices];                               // the list of currently infected bot IDs (the index value is the device id and the value indicates if the device is in the botnet)

credentials_t credential_attempt[total_devices];             // a list to represent passing credentials from attacking bot to device under attack

bot_id_t victim_queue[total_devices];                        // a list of devices to be infected
int [0, total_devices] victim_queue_length = 0;              // the number of devices currently waiting to be infected

int scan_loops = 0;
int_t total_scans = 0;
int attempt_loops = 0;
int_t total_attempts = 0;

//***********************************************************
// Functions
//***********************************************************

void ADD_RECORD(bot_id_t id){
    in_botnet[id] := true;
    current_number_bots += 1;
}

//***********************************************************
// Functions for queuing and dequeuing victims for the loader
//***********************************************************
void queue_victim(bot_id_t id) {
    victim_queue[victim_queue_length] = id;
    victim_queue_length++;
}

bot_id_t get_next_victim() {
    return victim_queue[--victim_queue_length];
}

bool victim_queue_empty(){
    return victim_queue_length == 0;
}

/******** Start a new cycle for messages, scans, and attack attempts whenever they exceed a certain LIMIT *********/

// the total number of messages is:
//             2*((LIMIT*scan_loops)+total_scans + (LIMIT*attempt_loops)+total_attempts)

void NEW_SCAN(){
    if (total_scans&lt;LIMIT){
        total_scans++;
        return;
    } else {
        scan_loops++;                //one full cycle has been completed
        total_scans=1;               //start counting from 1 again after a full cycle of 25000 scans
        return;
    }
}

void NEW_ATTEMPT(){
    if (total_attempts&lt;LIMIT){
        total_attempts++;
        return;
    } else {
        attempt_loops++;             //one full cycle has been completed
        total_attempts=1;            //start counting from 1 again after a full cycle of 25000 attempts
        return;
    }
}

//***********************************************************
// Gantt Color Codes
//***********************************************************
const int Color_Blue = 2;
const int Color_LBlue = 18;
const int Color_Cyan = 9;

const int Color_Purple = 3;
const int Color_DPurple = 20;

const int Color_Green = 8;
const int Color_LGreen = 24;

const int Color_Red = 0;
const int Color_Pink = 12;

const int Color_Orange = 5;
const int Color_LOrange = 14;
const int Color_Yellow = 6;</declaration>
	<template>
		<name>CnC</name>
		<declaration>bot_id_t v;
clock loader_x;</declaration>
		<location id="id0" x="-952" y="-1122">
			<name x="-969" y="-1156">Initial</name>
		</location>
		<location id="id1" x="-756" y="-1122">
			<name x="-766" y="-1156">Idle</name>
		</location>
		<location id="id2" x="-527" y="-1122">
			<name x="-569" y="-1164">Victim_Found</name>
			<committed/>
		</location>
		<location id="id3" x="-331" y="-1122">
			<name x="-357" y="-1156">Loading</name>
			<label kind="invariant" x="-357" y="-1105">loader_x&lt;=2</label>
		</location>
		<location id="id4" x="-68" y="-1122">
			<name x="-93" y="-1156">Loaded</name>
			<committed/>
		</location>
		<location id="id5" x="102" y="-1122">
			<name x="59" y="-1156">Check_Queue</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id5"/>
			<target ref="id2"/>
			<label kind="guard" x="-255" y="-1071">!victim_queue_empty()</label>
			<label kind="assignment" x="-246" y="-1045">v:=get_next_victim()</label>
			<nail x="-8" y="-1045"/>
			<nail x="-399" y="-1045"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id1"/>
			<label kind="guard" x="-425" y="-1020">victim_queue_empty()</label>
			<nail x="102" y="-994"/>
			<nail x="-756" y="-994"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="assignment" x="-42" y="-1122">ADD_RECORD(v)</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id5"/>
			<label kind="guard" x="-255" y="-1215">in_botnet[v]</label>
			<nail x="-365" y="-1190"/>
			<nail x="-42" y="-1190"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-238" y="-1147">loader_x&gt;=1</label>
			<label kind="synchronisation" x="-238" y="-1122">load_binary[v]!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-467" y="-1147">!in_botnet[v]</label>
			<label kind="assignment" x="-467" y="-1122">loader_x:=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-663" y="-1147">report?</label>
			<label kind="assignment" x="-705" y="-1122">v:=get_next_victim()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-892" y="-1122">activate_first!</label>
		</transition>
	</template>
	<template>
		<name>Bot_Default</name>
		<parameter>const int ip, const credentials_t credentials</parameter>
		<declaration>clock x1;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id6" x="533" y="68">
			<name x="474" y="85">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id7" x="533" y="-119">
			<name x="490" y="-154">Victim_Found</name>
			<committed/>
		</location>
		<location id="id8" x="253" y="-119">
			<name x="194" y="-153">Telnet_Port_Scan</name>
			<label kind="invariant" x="204" y="-110">x1&lt;=1</label>
		</location>
		<location id="id9" x="51" y="-119">
			<name x="17" y="-153">Inactive</name>
		</location>
		<location id="id10" x="788" y="-119">
			<name x="737" y="-102">Attack_Attempted</name>
			<label kind="invariant" x="797" y="-85">x1&lt;=1</label>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="363" y="43">report!</label>
			<nail x="253" y="68"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="329" y="-34">attack_attempts&gt;=10</label>
			<label kind="assignment" x="363" y="0">x1:=0</label>
			<nail x="491" y="-8"/>
			<nail x="295" y="-8"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="guard" x="644" y="-255">x1&gt;=1</label>
			<nail x="788" y="-229"/>
			<nail x="533" y="-229"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="select" x="348" y="-161">ip_sel:bot_ip_t</label>
			<label kind="guard" x="372" y="-144">x1&gt;=1</label>
			<label kind="assignment" x="321" y="-119">target_ip:=ip_sel,
x1:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id10"/>
			<label kind="select" x="603" y="-178">cd_sel:credentials_t</label>
			<label kind="guard" x="603" y="-161">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="576" y="-144">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="603" y="-119">target_cd:=cd_sel,
x1:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="601" y="42">login_success[target_ip]?</label>
			<label kind="assignment" x="618" y="68">queue_victim(target_ip)</label>
			<nail x="788" y="68"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="93" y="-144">activate_first?</label>
			<label kind="assignment" x="85" y="-119">in_botnet[0]:=true,
x1:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t1</name>
		<parameter>const bot_id_t ip, const credentials_t credentials</parameter>
		<declaration>clock x2;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id11" x="-1564" y="-153">
			<name x="-1623" y="-136">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id12" x="-1564" y="-340">
			<name x="-1607" y="-375">Victim_Found</name>
			<committed/>
		</location>
		<location id="id13" x="-2091" y="-569">
			<name x="-2125" y="-603">Connected</name>
		</location>
		<location id="id14" x="-2091" y="-340">
			<name x="-2125" y="-323">Vulnerable</name>
		</location>
		<location id="id15" x="-1844" y="-340">
			<name x="-1903" y="-374">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1895" y="-331">x2&lt;=1</label>
		</location>
		<location id="id16" x="-1309" y="-340">
			<name x="-1360" y="-323">Attack_Attempted</name>
			<label kind="invariant" x="-1300" y="-306">x2&lt;=1</label>
		</location>
		<location id="id17" x="-2091" y="-450">
			<name x="-2142" y="-433">Login_Successful</name>
			<committed/>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id17"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-2082" y="-408">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-1734" y="-178">report!</label>
			<nail x="-1844" y="-153"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id15"/>
			<label kind="guard" x="-1768" y="-255">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1734" y="-221">x2:=0</label>
			<nail x="-1606" y="-229"/>
			<nail x="-1802" y="-229"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id12"/>
			<label kind="guard" x="-1453" y="-476">x2&gt;=1</label>
			<nail x="-1309" y="-450"/>
			<nail x="-1564" y="-450"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id12"/>
			<label kind="select" x="-1751" y="-382">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1725" y="-365">x2&gt;=1</label>
			<label kind="assignment" x="-1759" y="-340">NEW_SCAN(),
target_ip:=ip_sel,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id16"/>
			<label kind="select" x="-1496" y="-399">cd_sel:credentials_t</label>
			<label kind="guard" x="-1496" y="-382">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1521" y="-365">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1496" y="-340">NEW_ATTEMPT(),
target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-1496" y="-178">login_success[target_ip]?</label>
			<label kind="assignment" x="-1479" y="-153">queue_victim(target_ip)</label>
			<nail x="-1309" y="-153"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id17"/>
			<label kind="guard" x="-2082" y="-535">credential_match()</label>
			<label kind="synchronisation" x="-2082" y="-518">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-2023" y="-365">load_binary[ip]?</label>
			<label kind="assignment" x="-1989" y="-340">x2:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t2</name>
		<parameter>const bot_id_t ip, const credentials_t credentials, const int reboot_length, const int_t reboot_period, const int period_overflows, int_t reboot_time, int time_overflows</parameter>
		<declaration>clock x2, x_reboot;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}

void reboot(){
    x2:=0;
    in_botnet[ip] := false;
    reboot_time:=reboot_period;
    time_overflows:=period_overflows;
}</declaration>
		<location id="id18" x="-1530" y="-119">
			<name x="-1589" y="-102">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id19" x="-1530" y="-306">
			<name x="-1573" y="-341">Victim_Found</name>
			<committed/>
		</location>
		<location id="id20" x="-2057" y="-535">
			<name x="-2091" y="-527">Connected</name>
			<label kind="invariant" x="-2184" y="-518">x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id21" x="-2057" y="-306">
			<name x="-2091" y="-289">Vulnerable</name>
		</location>
		<location id="id22" x="-1810" y="-306">
			<name x="-1869" y="-340">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1861" y="-297">x2&lt;=1 &amp;&amp;
x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id23" x="-1275" y="-306">
			<name x="-1326" y="-289">Attack_Attempted</name>
			<label kind="invariant" x="-1266" y="-272">x2&lt;=1 &amp;&amp;
x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id24" x="-2057" y="-416">
			<name x="-2108" y="-399">Login_Successful</name>
			<committed/>
		</location>
		<location id="id25" x="-1649" y="-535">
			<name x="-1675" y="-569">Rebooting</name>
			<label kind="invariant" x="-1700" y="-527">x2&lt;=reboot_length</label>
		</location>
		<init ref="id20"/>
		<transition>
			<source ref="id23"/>
			<target ref="id25"/>
			<label kind="guard" x="-1521" y="-561">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1428" y="-535">reboot(),
current_number_bots--</label>
			<nail x="-1198" y="-535"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id25"/>
			<label kind="guard" x="-1802" y="-416">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1802" y="-399">reboot(),
current_number_bots--</label>
			<nail x="-1810" y="-442"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id25"/>
			<label kind="guard" x="-1989" y="-561">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1870" y="-535">reboot()</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id20"/>
			<label kind="guard" x="-1895" y="-629">x2&gt;=reboot_length</label>
			<label kind="assignment" x="-1887" y="-603">x_reboot:=0</label>
			<nail x="-1734" y="-603"/>
			<nail x="-1963" y="-603"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-2048" y="-374">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-1700" y="-144">report!</label>
			<nail x="-1810" y="-119"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id22"/>
			<label kind="guard" x="-1734" y="-221">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1700" y="-187">x2:=0</label>
			<nail x="-1572" y="-195"/>
			<nail x="-1768" y="-195"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id19"/>
			<label kind="guard" x="-1419" y="-442">x2&gt;=1</label>
			<nail x="-1275" y="-416"/>
			<nail x="-1530" y="-416"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id19"/>
			<label kind="select" x="-1717" y="-348">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1691" y="-331">x2&gt;=1</label>
			<label kind="assignment" x="-1725" y="-306">NEW_SCAN(),
target_ip:=ip_sel,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id23"/>
			<label kind="select" x="-1462" y="-365">cd_sel:credentials_t</label>
			<label kind="guard" x="-1462" y="-348">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1487" y="-331">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1462" y="-306">NEW_ATTEMPT(),
target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-1462" y="-144">login_success[target_ip]?</label>
			<label kind="assignment" x="-1445" y="-119">queue_victim(target_ip)</label>
			<nail x="-1275" y="-119"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id24"/>
			<label kind="guard" x="-2048" y="-493">credential_match()</label>
			<label kind="synchronisation" x="-2048" y="-476">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-1989" y="-331">load_binary[ip]?</label>
			<label kind="assignment" x="-1955" y="-306">x2:=0</label>
		</transition>
	</template>
	<system>CNC = CnC();
BOT_DF = Bot_Default(0,110);
BOT1 = Bot_t2(1,156,600,4000,1,16184,0);
BOT2 = Bot_t2(2,145,600,4000,1,17470,0);
BOT3 = Bot_t2(3,128,600,4000,1,9759,0);
BOT4 = Bot_t2(4,118,600,4000,1,30882,0);
BOT5 = Bot_t2(5,148,600,4000,1,2497,1);
BOT6 = Bot_t2(6,107,600,4000,1,1382,0);
BOT7 = Bot_t2(7,134,600,4000,1,29030,0);
BOT8 = Bot_t2(8,147,600,4000,1,8843,0);
BOT9 = Bot_t2(9,103,600,4000,1,15467,0);
BOT10 = Bot_t2(10,157,600,4000,1,23458,0);
BOT11 = Bot_t2(11,146,600,4000,1,22035,0);
BOT12 = Bot_t2(12,149,600,4000,1,11864,0);
BOT13 = Bot_t2(13,130,600,4000,1,17038,0);
BOT14 = Bot_t2(14,141,600,4000,1,250,1);
BOT15 = Bot_t2(15,120,600,4000,1,11045,0);


system CNC, BOT_DF, BOT1, BOT2, BOT3, BOT4, BOT5, BOT6, BOT7, BOT8, BOT9, BOT10, BOT11, BOT12, BOT13, BOT14, BOT15;

gantt {
    
//========================SERVERS========================
    CnC_Idle:              CNC.Idle -&gt; Color_Blue;
    Loading_Binary:        CNC.Loading -&gt; Color_Purple;

//============================BOTs===============================
    BOT_DF_Scanning:    BOT_DF.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_DF_Attacking:   BOT_DF.Attack_Attempted -&gt; Color_Red; 

    BOT_1_safe:         BOT1.Connected -&gt; Color_Green;
    BOT_1_Vulnerable:   BOT1.Vulnerable -&gt; Color_Purple;
    BOT_1_Scanning:     BOT1.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_1_Attacking:    BOT1.Attack_Attempted -&gt; Color_Red;

    BOT_2_safe:         BOT2.Connected -&gt; Color_Green;
    BOT_2_Vulnerable:   BOT2.Vulnerable -&gt; Color_Purple;
    BOT_2_Scanning:     BOT2.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_2_Attacking:    BOT2.Attack_Attempted -&gt; Color_Red;

    BOT_3_safe:         BOT3.Connected -&gt; Color_Green;
    BOT_3_Vulnerable:   BOT3.Vulnerable -&gt; Color_Purple;
    BOT_3_Scanning:     BOT3.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_3_Attacking:    BOT3.Attack_Attempted -&gt; Color_Red;

    BOT_4_safe:         BOT4.Connected -&gt; Color_Green;
    BOT_1_Vulnerable:   BOT4.Vulnerable -&gt; Color_Purple;
    BOT_4_Scanning:     BOT4.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_4_Attacking:    BOT4.Attack_Attempted -&gt; Color_Red;

    BOT_5_safe:         BOT5.Connected -&gt; Color_Green;
    BOT_5_Vulnerable:   BOT5.Vulnerable -&gt; Color_Purple;
    BOT_5_Scanning:     BOT5.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_5_Attacking:    BOT5.Attack_Attempted -&gt; Color_Red;

    BOT_6_safe:         BOT6.Connected -&gt; Color_Green;
    BOT_6_Vulnerable:   BOT6.Vulnerable -&gt; Color_Purple;
    BOT_6_Scanning:     BOT6.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_6_Attacking:    BOT6.Attack_Attempted -&gt; Color_Red;

    BOT_7_safe:         BOT7.Connected -&gt; Color_Green;
    BOT_7_Vulnerable:   BOT7.Vulnerable -&gt; Color_Purple;
    BOT_7_Scanning:     BOT7.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_7_Attacking:    BOT7.Attack_Attempted -&gt; Color_Red;

    BOT_8_safe:         BOT8.Connected -&gt; Color_Green;
    BOT_5_Vulnerable:   BOT8.Vulnerable -&gt; Color_Purple;
    BOT_8_Scanning:     BOT8.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_8_Attacking:    BOT8.Attack_Attempted -&gt; Color_Red;

    BOT_9_safe:         BOT9.Connected -&gt; Color_Green;
    BOT_9_Vulnerable:   BOT9.Vulnerable -&gt; Color_Purple;
    BOT_9_Scanning:     BOT9.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_9_Attacking:    BOT9.Attack_Attempted -&gt; Color_Red;

    BOT_10_safe:         BOT10.Connected -&gt; Color_Green;
    BOT_10_Vulnerable:   BOT10.Vulnerable -&gt; Color_Purple;
    BOT_10_Scanning:     BOT10.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_10_Attacking:    BOT10.Attack_Attempted -&gt; Color_Red;

    BOT_11_safe:         BOT11.Connected -&gt; Color_Green;
    BOT_11_Vulnerable:   BOT11.Vulnerable -&gt; Color_Purple;
    BOT_11_Scanning:     BOT11.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_11_Attacking:    BOT11.Attack_Attempted -&gt; Color_Red;

    BOT_12_safe:         BOT12.Connected -&gt; Color_Green;
    BOT_12_Vulnerable:   BOT12.Vulnerable -&gt; Color_Purple;
    BOT_12_Scanning:     BOT12.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_12_Attacking:    BOT12.Attack_Attempted -&gt; Color_Red;

    BOT_13_safe:         BOT13.Connected -&gt; Color_Green;
    BOT_13_Vulnerable:   BOT13.Vulnerable -&gt; Color_Purple;
    BOT_13_Scanning:     BOT13.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_13_Attacking:    BOT13.Attack_Attempted -&gt; Color_Red;

    BOT_14_safe:         BOT14.Connected -&gt; Color_Green;
    BOT_14_Vulnerable:   BOT14.Vulnerable -&gt; Color_Purple;
    BOT_14_Scanning:     BOT14.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_14_Attacking:    BOT14.Attack_Attempted -&gt; Color_Red;

    BOT_15_safe:         BOT15.Connected -&gt; Color_Green;
    BOT_15_Vulnerable:   BOT15.Vulnerable -&gt; Color_Purple;
    BOT_15_Scanning:     BOT15.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_15_Attacking:    BOT15.Attack_Attempted -&gt; Color_Red;

}</system>
	<queries>
		<query>
			<formula>A[] total_time==50 imply current_number_bots+==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; total_time == 5
</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=500] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=500; 15] {BOT_DF.Telnet_Port_Scan, BOT_DF.Victim_Found}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=50] {in_botnet[1]}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==1)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==2)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==3)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25; 500] (&lt;&gt;current_number_bots==4)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- MODEL VERIFICATION -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] !deadlock</formula>
			<comment>Deadlocks never occur</comment>
		</query>
		<query>
			<formula>A[] deadlock imply current_number_bots==total_devices-1</formula>
			<comment>A deadlock implies that all devices have been infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- INFECTION REACHABILITY -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment>All devices will always be infected in every possible scenario</comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment>It is possible for every device to eventually be infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- INFECTION TIMES -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] total_time==50 imply current_number_bots==total_devices-1</formula>
			<comment>All devices are always infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=100; 100] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 100 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=50] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 50 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=25] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 25 time units</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=10; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 10 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=20; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 20 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=25; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 25 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=30; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 30 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=40; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 40 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=50; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 50 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=60; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 60 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=70; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 70 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=80; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 80 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=90; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 90 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=100; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 100 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[1])</formula>
			<comment>The probability bot 1 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[2])</formula>
			<comment>The probability bot 2 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[3])</formula>
			<comment>The probability bot 3 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[4])</formula>
			<comment>The probability bot 4 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[5])</formula>
			<comment>The probability bot 5 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment>The probability bot 1 has been infected by 25 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment>The probability bots 1 and 2 have been infected by 25 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment>The probability bots 1, 2 , and 3 have been infected by 25 time units</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=10000; 1] {current_number_bots}</formula>
			<comment>simulate 100 runs for 100 time units each and plot the number of infected bots against simulation time</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {in_botnet[1], in_botnet[2], in_botnet[3], in_botnet[4], in_botnet[5]}</formula>
			<comment>simulate 100 runs for 100 time units each and plot when each bot becomes infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- Network Traffic -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=32] (&lt;&gt; total_messages&gt;75)</formula>
			<comment>Probability that at least 75 messages are sent over the network in 32 time units (which is the expected time the infect all 5 devices)</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {total_scans, total_attempts} : current_number_bots==total_devices-1</formula>
			<comment>Simulate 100 runs for either 100 time units, or until every bot is infected, and plot the number of network scans and login attempts</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=5000; 1] {BOT9.Rebooting}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=1000; 1] {current_number_bots} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>BOT1.Vulnerable --&gt; BOT1.Telnet_Port_Scan</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
