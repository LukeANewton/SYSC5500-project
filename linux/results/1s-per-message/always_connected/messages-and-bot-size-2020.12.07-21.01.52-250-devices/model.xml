<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//***********************************************************
//Variables
//***********************************************************
urgent broadcast chan activate_first, new_victim, activate_new, activated, report, start_loader;
broadcast chan setup;

const int total_devices =251;                      //the number of devices in the network
const int timeout = 10;                           //the maximum amount of time to wait for a login response

int[0, total_devices] current_number_bots = 0;    //the number of infected devices at any given time

typedef int[1, total_devices] bot_id_t;           //possible values for bot ids (akin to ip addresses)
typedef int[1, total_devices-1] bot_ip_t;
typedef int[101, 162] credentials_t;              //possible values for credentials (akin to username/password combination)

urgent broadcast chan dictionary_attack[total_devices];    //a channel for each device representing the attempted login on that device
urgent broadcast chan login_success[total_devices];        //a channel for each device representing the a successful login response to the attacking bot
broadcast chan load_binary[total_devices];                 //a channel for each device representing the command to begin secondary infection

bot_id_t victim_id;                               //the id of the bot currently being infected
bool in_botnet[total_devices];                    //the list of currently infected bot IDs (the index value is the device id and the value indicates if the device is in the botnet)

credentials_t credential_attempt[total_devices];  //a list to represent passing credentials from attacking bot to device under attack

const int LIMIT = 32000;
typedef int[0, LIMIT] int_t;
int scan_loops = 0;
int_t total_scans = 0;
int attempt_loops = 0;
int_t total_attempts = 0;
int message_loops = 0;
int_t total_messages = 0;

clock total_time;



//***********************************************************
//Functions
//***********************************************************
bool MATCH(int id){
    return in_botnet[id];
}

void ADD_RECORD(bot_id_t id){
    in_botnet[id] := true;
    current_number_bots += 1;
}

/* bot_id_t CHOOSE_IP(){
    bot_id_t i = 1; 
    for (i; i&lt;=total_devices; i++){
        if (!MATCH(i)){
            total_scans += 1;
            return i;
        }            
    }
    return i;
}
*/


/******** Start a new cycle for messages, scans, and attack attempts whenever they exceed a certain LIMIT *********/
void NEW_MESSAGE(){
    if (total_messages&lt;LIMIT){
        total_messages+=2;
        return;
    } else {
        message_loops++;             //one full cycle has been completed
        total_messages=2;            //start counting from 2 again after a full cycle of 25000 messages
        return;
    }
}

void NEW_SCAN(){
    NEW_MESSAGE();
    if (total_scans&lt;LIMIT){
        total_scans++;
        return;
    } else {
        scan_loops++;                //one full cycle has been completed
        total_scans=1;               //start counting from 1 again after a full cycle of 25000 scans
        return;
    }
}

void NEW_ATTEMPT(){
    NEW_MESSAGE();
    if (total_attempts&lt;LIMIT){
        total_attempts++;
        return;
    } else {
        attempt_loops++;             //one full cycle has been completed
        total_attempts=1;            //start counting from 1 again after a full cycle of 25000 attempts
        return;
    }
}

//***********************************************************
//Gantt Color Codes
//***********************************************************
const int Color_Blue = 2;
const int Color_LBlue = 18;
const int Color_Cyan = 9;

const int Color_Purple = 3;
const int Color_DPurple = 20;

const int Color_Green = 8;
const int Color_LGreen = 24;

const int Color_Red = 0;
const int Color_Pink = 12;

const int Color_Orange = 5;
const int Color_LOrange = 14;
const int Color_Yellow = 6;</declaration>
	<template>
		<name>Mirai_Blacknet</name>
		<location id="id0" x="-1080" y="-323">
			<name x="-1090" y="-357">Idle</name>
		</location>
		<location id="id1" x="-884" y="-323">
			<name x="-935" y="-314">Listening_Mode</name>
		</location>
		<location id="id2" x="-731" y="-323">
			<name x="-773" y="-357">Victim_Found</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-1028" y="-348">activate_first!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-876" y="-459">!in_botnet[victim_id]</label>
			<label kind="synchronisation" x="-884" y="-442">load_binary[victim_id]!</label>
			<label kind="assignment" x="-892" y="-425">ADD_RECORD(victim_id)</label>
			<nail x="-757" y="-399"/>
			<nail x="-859" y="-399"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-876" y="-246">in_botnet[victim_id]</label>
			<nail x="-757" y="-246"/>
			<nail x="-859" y="-246"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-833" y="-323">report?</label>
		</transition>
	</template>
	<template>
		<name>Bot_Default</name>
		<parameter>const int ip, const credentials_t credentials</parameter>
		<declaration>clock x1;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id3" x="533" y="68">
			<name x="474" y="85">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id4" x="533" y="-119">
			<name x="490" y="-154">Victim_Found</name>
			<committed/>
		</location>
		<location id="id5" x="253" y="-119">
			<name x="194" y="-153">Telnet_Port_Scan</name>
			<label kind="invariant" x="204" y="-110">x1&lt;=1</label>
		</location>
		<location id="id6" x="51" y="-119">
			<name x="17" y="-153">Inactive</name>
		</location>
		<location id="id7" x="788" y="-119">
			<name x="737" y="-102">Attack_Attempted</name>
			<label kind="invariant" x="797" y="-85">x1&lt;=1</label>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="363" y="43">report!</label>
			<nail x="253" y="68"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="329" y="-34">attack_attempts&gt;=10</label>
			<label kind="assignment" x="363" y="0">x1:=0</label>
			<nail x="491" y="-8"/>
			<nail x="295" y="-8"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="guard" x="644" y="-255">x1&gt;=1</label>
			<nail x="788" y="-229"/>
			<nail x="533" y="-229"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="select" x="348" y="-161">ip_sel:bot_ip_t</label>
			<label kind="guard" x="372" y="-144">x1&gt;=1</label>
			<label kind="assignment" x="321" y="-119">target_ip:=ip_sel,
x1:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id7"/>
			<label kind="select" x="603" y="-178">cd_sel:credentials_t</label>
			<label kind="guard" x="603" y="-161">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="576" y="-144">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="603" y="-119">target_cd:=cd_sel,
x1:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="601" y="42">login_success[target_ip]?</label>
			<label kind="assignment" x="618" y="68">victim_id:=target_ip</label>
			<nail x="788" y="68"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="93" y="-144">activate_first?</label>
			<label kind="assignment" x="85" y="-119">in_botnet[0]:=true,
x1:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t1</name>
		<parameter>const bot_id_t ip, const credentials_t credentials</parameter>
		<declaration>clock x2;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id8" x="-1564" y="-153">
			<name x="-1623" y="-136">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id9" x="-1564" y="-340">
			<name x="-1607" y="-375">Victim_Found</name>
			<committed/>
		</location>
		<location id="id10" x="-2091" y="-569">
			<name x="-2125" y="-603">Connected</name>
		</location>
		<location id="id11" x="-2091" y="-340">
			<name x="-2125" y="-323">Vulnerable</name>
		</location>
		<location id="id12" x="-1844" y="-340">
			<name x="-1903" y="-374">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1895" y="-331">x2&lt;=1</label>
		</location>
		<location id="id13" x="-1309" y="-340">
			<name x="-1360" y="-323">Attack_Attempted</name>
			<label kind="invariant" x="-1300" y="-306">x2&lt;=1</label>
		</location>
		<location id="id14" x="-2091" y="-450">
			<name x="-2142" y="-433">Login_Successful</name>
			<committed/>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id14"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-2082" y="-408">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-1734" y="-178">report!</label>
			<nail x="-1844" y="-153"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="guard" x="-1768" y="-255">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1734" y="-221">x2:=0</label>
			<nail x="-1606" y="-229"/>
			<nail x="-1802" y="-229"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id9"/>
			<label kind="guard" x="-1453" y="-476">x2&gt;=1</label>
			<nail x="-1309" y="-450"/>
			<nail x="-1564" y="-450"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="select" x="-1751" y="-382">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1725" y="-365">x2&gt;=1</label>
			<label kind="assignment" x="-1759" y="-340">NEW_SCAN(),
target_ip:=ip_sel,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id13"/>
			<label kind="select" x="-1496" y="-399">cd_sel:credentials_t</label>
			<label kind="guard" x="-1496" y="-382">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1521" y="-365">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1496" y="-340">NEW_ATTEMPT(),
target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-1496" y="-178">login_success[target_ip]?</label>
			<label kind="assignment" x="-1479" y="-153">victim_id:=target_ip</label>
			<nail x="-1309" y="-153"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="guard" x="-2082" y="-535">credential_match()</label>
			<label kind="synchronisation" x="-2082" y="-518">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-2023" y="-365">load_binary[ip]?</label>
			<label kind="assignment" x="-1989" y="-340">x2:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t2</name>
		<parameter>const bot_id_t ip, const credentials_t credentials, const int reboot_length, const int_t reboot_period, const int period_overflows, int_t reboot_time, int time_overflows</parameter>
		<declaration>clock x2, x_reboot;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}

void reboot(){
    x2:=0;
    in_botnet[ip] := false;
    reboot_time:=reboot_period;
    time_overflows:=period_overflows;
}</declaration>
		<location id="id15" x="-1530" y="-119">
			<name x="-1589" y="-102">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id16" x="-1530" y="-306">
			<name x="-1573" y="-341">Victim_Found</name>
			<committed/>
		</location>
		<location id="id17" x="-2057" y="-535">
			<name x="-2091" y="-527">Connected</name>
			<label kind="invariant" x="-2184" y="-518">x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id18" x="-2057" y="-306">
			<name x="-2091" y="-289">Vulnerable</name>
		</location>
		<location id="id19" x="-1810" y="-306">
			<name x="-1869" y="-340">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1861" y="-297">x2&lt;=1 &amp;&amp;
x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id20" x="-1275" y="-306">
			<name x="-1326" y="-289">Attack_Attempted</name>
			<label kind="invariant" x="-1266" y="-272">x2&lt;=1 &amp;&amp;
x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id21" x="-2057" y="-416">
			<name x="-2108" y="-399">Login_Successful</name>
			<committed/>
		</location>
		<location id="id22" x="-1649" y="-535">
			<name x="-1675" y="-569">Rebooting</name>
			<label kind="invariant" x="-1700" y="-527">x2&lt;=reboot_length</label>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
			<label kind="guard" x="-1521" y="-561">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1428" y="-535">reboot(),
current_number_bots--</label>
			<nail x="-1198" y="-535"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id22"/>
			<label kind="guard" x="-1802" y="-416">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1802" y="-399">reboot(),
current_number_bots--</label>
			<nail x="-1810" y="-442"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id22"/>
			<label kind="guard" x="-1989" y="-561">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1870" y="-535">reboot()</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id17"/>
			<label kind="guard" x="-1895" y="-629">x2&gt;=reboot_length</label>
			<label kind="assignment" x="-1887" y="-603">x_reboot:=0</label>
			<nail x="-1734" y="-603"/>
			<nail x="-1963" y="-603"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-2048" y="-374">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-1700" y="-144">report!</label>
			<nail x="-1810" y="-119"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id19"/>
			<label kind="guard" x="-1734" y="-221">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1700" y="-187">x2:=0</label>
			<nail x="-1572" y="-195"/>
			<nail x="-1768" y="-195"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id16"/>
			<label kind="guard" x="-1419" y="-442">x2&gt;=1</label>
			<nail x="-1275" y="-416"/>
			<nail x="-1530" y="-416"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="select" x="-1717" y="-348">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1691" y="-331">x2&gt;=1</label>
			<label kind="assignment" x="-1725" y="-306">NEW_SCAN(),
target_ip:=ip_sel,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id20"/>
			<label kind="select" x="-1462" y="-365">cd_sel:credentials_t</label>
			<label kind="guard" x="-1462" y="-348">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1487" y="-331">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1462" y="-306">NEW_ATTEMPT(),
target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-1462" y="-144">login_success[target_ip]?</label>
			<label kind="assignment" x="-1445" y="-119">victim_id:=target_ip</label>
			<nail x="-1275" y="-119"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id21"/>
			<label kind="guard" x="-2048" y="-493">credential_match()</label>
			<label kind="synchronisation" x="-2048" y="-476">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-1989" y="-331">load_binary[ip]?</label>
			<label kind="assignment" x="-1955" y="-306">x2:=0</label>
		</transition>
	</template>
	<system>MIRAI_BLCK = Mirai_Blacknet();
BOT_DF = Bot_Default(0,110);
BOT1 = Bot_t1(1,120);
BOT2 = Bot_t1(2,108);
BOT3 = Bot_t1(3,152);
BOT4 = Bot_t1(4,161);
BOT5 = Bot_t1(5,159);
BOT6 = Bot_t1(6,160);
BOT7 = Bot_t1(7,150);
BOT8 = Bot_t1(8,135);
BOT9 = Bot_t1(9,147);
BOT10 = Bot_t1(10,102);
BOT11 = Bot_t1(11,124);
BOT12 = Bot_t1(12,123);
BOT13 = Bot_t1(13,139);
BOT14 = Bot_t1(14,131);
BOT15 = Bot_t1(15,102);
BOT16 = Bot_t1(16,122);
BOT17 = Bot_t1(17,107);
BOT18 = Bot_t1(18,162);
BOT19 = Bot_t1(19,147);
BOT20 = Bot_t1(20,144);
BOT21 = Bot_t1(21,128);
BOT22 = Bot_t1(22,136);
BOT23 = Bot_t1(23,104);
BOT24 = Bot_t1(24,149);
BOT25 = Bot_t1(25,102);
BOT26 = Bot_t1(26,113);
BOT27 = Bot_t1(27,157);
BOT28 = Bot_t1(28,138);
BOT29 = Bot_t1(29,102);
BOT30 = Bot_t1(30,139);
BOT31 = Bot_t1(31,130);
BOT32 = Bot_t1(32,110);
BOT33 = Bot_t1(33,119);
BOT34 = Bot_t1(34,161);
BOT35 = Bot_t1(35,115);
BOT36 = Bot_t1(36,143);
BOT37 = Bot_t1(37,161);
BOT38 = Bot_t1(38,155);
BOT39 = Bot_t1(39,159);
BOT40 = Bot_t1(40,153);
BOT41 = Bot_t1(41,144);
BOT42 = Bot_t1(42,156);
BOT43 = Bot_t1(43,146);
BOT44 = Bot_t1(44,136);
BOT45 = Bot_t1(45,126);
BOT46 = Bot_t1(46,115);
BOT47 = Bot_t1(47,137);
BOT48 = Bot_t1(48,146);
BOT49 = Bot_t1(49,113);
BOT50 = Bot_t1(50,148);
BOT51 = Bot_t1(51,151);
BOT52 = Bot_t1(52,146);
BOT53 = Bot_t1(53,135);
BOT54 = Bot_t1(54,143);
BOT55 = Bot_t1(55,134);
BOT56 = Bot_t1(56,132);
BOT57 = Bot_t1(57,134);
BOT58 = Bot_t1(58,125);
BOT59 = Bot_t1(59,152);
BOT60 = Bot_t1(60,104);
BOT61 = Bot_t1(61,145);
BOT62 = Bot_t1(62,123);
BOT63 = Bot_t1(63,148);
BOT64 = Bot_t1(64,124);
BOT65 = Bot_t1(65,151);
BOT66 = Bot_t1(66,156);
BOT67 = Bot_t1(67,119);
BOT68 = Bot_t1(68,117);
BOT69 = Bot_t1(69,152);
BOT70 = Bot_t1(70,154);
BOT71 = Bot_t1(71,141);
BOT72 = Bot_t1(72,149);
BOT73 = Bot_t1(73,102);
BOT74 = Bot_t1(74,138);
BOT75 = Bot_t1(75,128);
BOT76 = Bot_t1(76,118);
BOT77 = Bot_t1(77,138);
BOT78 = Bot_t1(78,104);
BOT79 = Bot_t1(79,151);
BOT80 = Bot_t1(80,112);
BOT81 = Bot_t1(81,125);
BOT82 = Bot_t1(82,132);
BOT83 = Bot_t1(83,139);
BOT84 = Bot_t1(84,129);
BOT85 = Bot_t1(85,145);
BOT86 = Bot_t1(86,121);
BOT87 = Bot_t1(87,144);
BOT88 = Bot_t1(88,161);
BOT89 = Bot_t1(89,153);
BOT90 = Bot_t1(90,105);
BOT91 = Bot_t1(91,151);
BOT92 = Bot_t1(92,137);
BOT93 = Bot_t1(93,152);
BOT94 = Bot_t1(94,127);
BOT95 = Bot_t1(95,156);
BOT96 = Bot_t1(96,140);
BOT97 = Bot_t1(97,143);
BOT98 = Bot_t1(98,119);
BOT99 = Bot_t1(99,160);
BOT100 = Bot_t1(100,124);
BOT101 = Bot_t1(101,107);
BOT102 = Bot_t1(102,155);
BOT103 = Bot_t1(103,118);
BOT104 = Bot_t1(104,136);
BOT105 = Bot_t1(105,132);
BOT106 = Bot_t1(106,155);
BOT107 = Bot_t1(107,114);
BOT108 = Bot_t1(108,125);
BOT109 = Bot_t1(109,113);
BOT110 = Bot_t1(110,138);
BOT111 = Bot_t1(111,109);
BOT112 = Bot_t1(112,131);
BOT113 = Bot_t1(113,158);
BOT114 = Bot_t1(114,159);
BOT115 = Bot_t1(115,154);
BOT116 = Bot_t1(116,126);
BOT117 = Bot_t1(117,132);
BOT118 = Bot_t1(118,102);
BOT119 = Bot_t1(119,138);
BOT120 = Bot_t1(120,115);
BOT121 = Bot_t1(121,124);
BOT122 = Bot_t1(122,139);
BOT123 = Bot_t1(123,121);
BOT124 = Bot_t1(124,150);
BOT125 = Bot_t1(125,141);
BOT126 = Bot_t1(126,102);
BOT127 = Bot_t1(127,113);
BOT128 = Bot_t1(128,156);
BOT129 = Bot_t1(129,114);
BOT130 = Bot_t1(130,117);
BOT131 = Bot_t1(131,145);
BOT132 = Bot_t1(132,112);
BOT133 = Bot_t1(133,114);
BOT134 = Bot_t1(134,137);
BOT135 = Bot_t1(135,111);
BOT136 = Bot_t1(136,119);
BOT137 = Bot_t1(137,124);
BOT138 = Bot_t1(138,162);
BOT139 = Bot_t1(139,129);
BOT140 = Bot_t1(140,152);
BOT141 = Bot_t1(141,123);
BOT142 = Bot_t1(142,122);
BOT143 = Bot_t1(143,144);
BOT144 = Bot_t1(144,126);
BOT145 = Bot_t1(145,140);
BOT146 = Bot_t1(146,132);
BOT147 = Bot_t1(147,128);
BOT148 = Bot_t1(148,113);
BOT149 = Bot_t1(149,149);
BOT150 = Bot_t1(150,137);
BOT151 = Bot_t1(151,144);
BOT152 = Bot_t1(152,160);
BOT153 = Bot_t1(153,142);
BOT154 = Bot_t1(154,143);
BOT155 = Bot_t1(155,101);
BOT156 = Bot_t1(156,121);
BOT157 = Bot_t1(157,113);
BOT158 = Bot_t1(158,136);
BOT159 = Bot_t1(159,115);
BOT160 = Bot_t1(160,111);
BOT161 = Bot_t1(161,135);
BOT162 = Bot_t1(162,136);
BOT163 = Bot_t1(163,149);
BOT164 = Bot_t1(164,106);
BOT165 = Bot_t1(165,109);
BOT166 = Bot_t1(166,124);
BOT167 = Bot_t1(167,132);
BOT168 = Bot_t1(168,126);
BOT169 = Bot_t1(169,139);
BOT170 = Bot_t1(170,149);
BOT171 = Bot_t1(171,135);
BOT172 = Bot_t1(172,141);
BOT173 = Bot_t1(173,144);
BOT174 = Bot_t1(174,128);
BOT175 = Bot_t1(175,151);
BOT176 = Bot_t1(176,125);
BOT177 = Bot_t1(177,154);
BOT178 = Bot_t1(178,113);
BOT179 = Bot_t1(179,151);
BOT180 = Bot_t1(180,117);
BOT181 = Bot_t1(181,137);
BOT182 = Bot_t1(182,151);
BOT183 = Bot_t1(183,120);
BOT184 = Bot_t1(184,138);
BOT185 = Bot_t1(185,151);
BOT186 = Bot_t1(186,154);
BOT187 = Bot_t1(187,148);
BOT188 = Bot_t1(188,133);
BOT189 = Bot_t1(189,143);
BOT190 = Bot_t1(190,148);
BOT191 = Bot_t1(191,133);
BOT192 = Bot_t1(192,105);
BOT193 = Bot_t1(193,130);
BOT194 = Bot_t1(194,126);
BOT195 = Bot_t1(195,159);
BOT196 = Bot_t1(196,130);
BOT197 = Bot_t1(197,139);
BOT198 = Bot_t1(198,139);
BOT199 = Bot_t1(199,125);
BOT200 = Bot_t1(200,136);
BOT201 = Bot_t1(201,131);
BOT202 = Bot_t1(202,129);
BOT203 = Bot_t1(203,121);
BOT204 = Bot_t1(204,120);
BOT205 = Bot_t1(205,118);
BOT206 = Bot_t1(206,113);
BOT207 = Bot_t1(207,134);
BOT208 = Bot_t1(208,134);
BOT209 = Bot_t1(209,155);
BOT210 = Bot_t1(210,123);
BOT211 = Bot_t1(211,144);
BOT212 = Bot_t1(212,124);
BOT213 = Bot_t1(213,157);
BOT214 = Bot_t1(214,119);
BOT215 = Bot_t1(215,131);
BOT216 = Bot_t1(216,152);
BOT217 = Bot_t1(217,158);
BOT218 = Bot_t1(218,101);
BOT219 = Bot_t1(219,161);
BOT220 = Bot_t1(220,120);
BOT221 = Bot_t1(221,138);
BOT222 = Bot_t1(222,118);
BOT223 = Bot_t1(223,148);
BOT224 = Bot_t1(224,127);
BOT225 = Bot_t1(225,160);
BOT226 = Bot_t1(226,159);
BOT227 = Bot_t1(227,162);
BOT228 = Bot_t1(228,153);
BOT229 = Bot_t1(229,145);
BOT230 = Bot_t1(230,107);
BOT231 = Bot_t1(231,101);
BOT232 = Bot_t1(232,159);
BOT233 = Bot_t1(233,136);
BOT234 = Bot_t1(234,154);
BOT235 = Bot_t1(235,127);
BOT236 = Bot_t1(236,135);
BOT237 = Bot_t1(237,133);
BOT238 = Bot_t1(238,150);
BOT239 = Bot_t1(239,101);
BOT240 = Bot_t1(240,102);
BOT241 = Bot_t1(241,155);
BOT242 = Bot_t1(242,114);
BOT243 = Bot_t1(243,117);
BOT244 = Bot_t1(244,119);
BOT245 = Bot_t1(245,141);
BOT246 = Bot_t1(246,144);
BOT247 = Bot_t1(247,147);
BOT248 = Bot_t1(248,146);
BOT249 = Bot_t1(249,111);
BOT250 = Bot_t1(250,102);
system MIRAI_BLCK, BOT_DF, BOT1, BOT2, BOT3, BOT4, BOT5, BOT6, BOT7, BOT8, BOT9, BOT10, BOT11, BOT12, BOT13, BOT14, BOT15, BOT16, BOT17, BOT18, BOT19, BOT20, BOT21, BOT22, BOT23, BOT24, BOT25, BOT26, BOT27, BOT28, BOT29, BOT30, BOT31, BOT32, BOT33, BOT34, BOT35, BOT36, BOT37, BOT38, BOT39, BOT40, BOT41, BOT42, BOT43, BOT44, BOT45, BOT46, BOT47, BOT48, BOT49, BOT50, BOT51, BOT52, BOT53, BOT54, BOT55, BOT56, BOT57, BOT58, BOT59, BOT60, BOT61, BOT62, BOT63, BOT64, BOT65, BOT66, BOT67, BOT68, BOT69, BOT70, BOT71, BOT72, BOT73, BOT74, BOT75, BOT76, BOT77, BOT78, BOT79, BOT80, BOT81, BOT82, BOT83, BOT84, BOT85, BOT86, BOT87, BOT88, BOT89, BOT90, BOT91, BOT92, BOT93, BOT94, BOT95, BOT96, BOT97, BOT98, BOT99, BOT100, BOT101, BOT102, BOT103, BOT104, BOT105, BOT106, BOT107, BOT108, BOT109, BOT110, BOT111, BOT112, BOT113, BOT114, BOT115, BOT116, BOT117, BOT118, BOT119, BOT120, BOT121, BOT122, BOT123, BOT124, BOT125, BOT126, BOT127, BOT128, BOT129, BOT130, BOT131, BOT132, BOT133, BOT134, BOT135, BOT136, BOT137, BOT138, BOT139, BOT140, BOT141, BOT142, BOT143, BOT144, BOT145, BOT146, BOT147, BOT148, BOT149, BOT150, BOT151, BOT152, BOT153, BOT154, BOT155, BOT156, BOT157, BOT158, BOT159, BOT160, BOT161, BOT162, BOT163, BOT164, BOT165, BOT166, BOT167, BOT168, BOT169, BOT170, BOT171, BOT172, BOT173, BOT174, BOT175, BOT176, BOT177, BOT178, BOT179, BOT180, BOT181, BOT182, BOT183, BOT184, BOT185, BOT186, BOT187, BOT188, BOT189, BOT190, BOT191, BOT192, BOT193, BOT194, BOT195, BOT196, BOT197, BOT198, BOT199, BOT200, BOT201, BOT202, BOT203, BOT204, BOT205, BOT206, BOT207, BOT208, BOT209, BOT210, BOT211, BOT212, BOT213, BOT214, BOT215, BOT216, BOT217, BOT218, BOT219, BOT220, BOT221, BOT222, BOT223, BOT224, BOT225, BOT226, BOT227, BOT228, BOT229, BOT230, BOT231, BOT232, BOT233, BOT234, BOT235, BOT236, BOT237, BOT238, BOT239, BOT240, BOT241, BOT242, BOT243, BOT244, BOT245, BOT246, BOT247, BOT248, BOT249, BOT250;
</system>
	<queries>
		<query>
			<formula>A[] total_time==50 imply current_number_bots+==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; total_time == 5
</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=500] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=500; 15] {BOT_DF.Telnet_Port_Scan, BOT_DF.Victim_Found}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=50] {in_botnet[1]}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==1)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==2)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==3)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25; 500] (&lt;&gt;current_number_bots==4)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- MODEL VERIFICATION -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] !deadlock</formula>
			<comment>Deadlocks never occur</comment>
		</query>
		<query>
			<formula>A[] deadlock imply current_number_bots==total_devices-1</formula>
			<comment>A deadlock implies that all devices have been infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- INFECTION REACHABILITY -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment>All devices will always be infected in every possible scenario</comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment>It is possible for every device to eventually be infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- INFECTION TIMES -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] total_time==50 imply current_number_bots==total_devices-1</formula>
			<comment>All devices are always infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=100; 100] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 100 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=50] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 50 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=25] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 25 time units</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=10; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 10 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=20; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 20 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=25; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 25 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=30; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 30 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=40; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 40 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=50; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 50 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=60; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 60 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=70; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 70 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=80; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 80 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=90; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 90 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=100; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 100 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[1])</formula>
			<comment>The probability bot 1 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[2])</formula>
			<comment>The probability bot 2 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[3])</formula>
			<comment>The probability bot 3 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[4])</formula>
			<comment>The probability bot 4 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[5])</formula>
			<comment>The probability bot 5 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment>The probability bot 1 has been infected by 25 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment>The probability bots 1 and 2 have been infected by 25 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment>The probability bots 1, 2 , and 3 have been infected by 25 time units</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {current_number_bots}</formula>
			<comment>simulate 100 runs for 100 time units each and plot the number of infected bots against simulation time</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {in_botnet[1], in_botnet[2], in_botnet[3], in_botnet[4], in_botnet[5]}</formula>
			<comment>simulate 100 runs for 100 time units each and plot when each bot becomes infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- Network Traffic -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=32] (&lt;&gt; total_messages&gt;75)</formula>
			<comment>Probability that at least 75 messages are sent over the network in 32 time units (which is the expected time the infect all 5 devices)</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {total_scans, total_attempts} : current_number_bots==total_devices-1</formula>
			<comment>Simulate 100 runs for either 100 time units, or until every bot is infected, and plot the number of network scans and login attempts</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {total_messages} : current_number_bots==total_devices-1</formula>
			<comment>Simulate 100 runs for either 100 time units, or until every bot is infected, and plot the number of messages sent over the network</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=300; 100] {total_messages} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=300; 100] {message_loops*LIMIT + total_messages} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=500; 10] {total_messages} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=500; 10] {message_loops*LIMIT + total_messages} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=500; 20] {message_loops*LIMIT + total_messages} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=500; 1] {BOT9.Rebooting}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=500; 1] {current_number_bots}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=5000; 5] {message_loops*LIMIT + total_messages} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
