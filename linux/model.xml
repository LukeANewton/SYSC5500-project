<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//***********************************************************
// Variables
//***********************************************************
clock total_time;                                            // universal clock for total simulated time

const int total_devices =251;                                 // the number of devices in the network
const int timeout = 10;                                      // the maximum amount of time to wait for a login response
const int LIMIT = 32000;                                     // the maximum value for counting before whe need to roll over the counter

typedef int[1, total_devices] bot_id_t;                      // possible values for bot ids (akin to ip addresses)
typedef int[1, total_devices-1] bot_ip_t;
typedef int[101, 162] credentials_t;                         // possible values for credentials (akin to username/password combination)
typedef int[0, LIMIT] int_t;

urgent broadcast chan activate_first;                        // a channel to activate the first bot
urgent broadcast chan report;                                // a channel to notfy the CnC that there is a new device to infect
urgent broadcast chan dictionary_attack[total_devices];      // a channel for each device representing the attempted login on that device
urgent broadcast chan login_success[total_devices];          // a channel for each device representing the a successful login response to the attacking bot
broadcast chan load_binary[total_devices];                   // a channel for each device representing the command to begin secondary infection

int[0, total_devices] current_number_bots = 0;               // the number of infected devices at any given time
bool in_botnet[total_devices];                               // the list of currently infected bot IDs (the index value is the device id and the value indicates if the device is in the botnet)

credentials_t credential_attempt[total_devices];             // a list to represent passing credentials from attacking bot to device under attack

bot_id_t victim;

bot_id_t victim_queue[total_devices];                        // a list of devices to be infected
int [0, total_devices] victim_queue_length = 0;              // the number of devices currently waiting to be infected

int scan_loops = 0;
int_t total_scans = 0;
int attempt_loops = 0;
int_t total_attempts = 0;

//***********************************************************
// Functions
//***********************************************************

void ADD_RECORD(bot_id_t id){
    in_botnet[id] := true;
    current_number_bots += 1;
}

//***********************************************************
// Functions for queuing and dequeuing victims for the loader
//***********************************************************
void queue_victim(bot_id_t id) {
    victim_queue[victim_queue_length] = id;
    victim_queue_length++;
}

bot_id_t get_next_victim() {
    return victim_queue[--victim_queue_length];
}

bool victim_queue_empty(){
    return victim_queue_length == 0;
}

/******** Start a new cycle for messages, scans, and attack attempts whenever they exceed a certain LIMIT *********/

// the total number of messages is:
//             2*((LIMIT*scan_loops)+total_scans + (LIMIT*attempt_loops)+total_attempts)

void NEW_SCAN(){
    if (total_scans&lt;LIMIT){
        total_scans++;
        return;
    } else {
        scan_loops++;                //one full cycle has been completed
        total_scans=1;               //start counting from 1 again after a full cycle of 25000 scans
        return;
    }
}

void NEW_ATTEMPT(){
    if (total_attempts&lt;LIMIT){
        total_attempts++;
        return;
    } else {
        attempt_loops++;             //one full cycle has been completed
        total_attempts=1;            //start counting from 1 again after a full cycle of 25000 attempts
        return;
    }
}

//***********************************************************
// Gantt Color Codes
//***********************************************************
const int Color_Blue = 2;
const int Color_LBlue = 18;
const int Color_Cyan = 9;

const int Color_Purple = 3;
const int Color_DPurple = 20;

const int Color_Green = 8;
const int Color_LGreen = 24;

const int Color_Red = 0;
const int Color_Pink = 12;

const int Color_Orange = 5;
const int Color_LOrange = 14;
const int Color_Yellow = 6;</declaration>
	<template>
		<name>CnC</name>
		<declaration>bot_id_t v;
clock loader_x, x_poll;</declaration>
		<location id="id0" x="-902" y="-1258">
			<name x="-919" y="-1292">Initial</name>
		</location>
		<location id="id1" x="-723" y="-1258">
			<name x="-733" y="-1292">Idle</name>
			<label kind="invariant" x="-731" y="-1249">x_poll&lt;=1</label>
		</location>
		<location id="id2" x="-477" y="-1258">
			<name x="-519" y="-1292">Victim_Found</name>
			<committed/>
		</location>
		<location id="id3" x="-111" y="-1258">
			<name x="-137" y="-1292">Loading</name>
			<label kind="invariant" x="-128" y="-1249">loader_x&lt;=2</label>
		</location>
		<location id="id4" x="93" y="-1258">
			<name x="68" y="-1292">Loaded</name>
			<committed/>
		</location>
		<location id="id5" x="-272" y="-1258">
			<name x="-323" y="-1292">Record_Added</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-790" y="-1385">x_poll&gt;=1 &amp;&amp;
victim_queue_empty()</label>
			<label kind="assignment" x="-756" y="-1343">x_poll:=0</label>
			<nail x="-663" y="-1343"/>
			<nail x="-782" y="-1343"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="assignment" x="-705" y="-1113">x_poll:=0</label>
			<nail x="93" y="-1113"/>
			<nail x="-723" y="-1113"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-629" y="-1215">in_botnet[v]</label>
			<nail x="-527" y="-1190"/>
			<nail x="-663" y="-1190"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id5"/>
			<label kind="guard" x="-425" y="-1283">!in_botnet[v]</label>
			<label kind="assignment" x="-442" y="-1258">ADD_RECORD(v)</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-43" y="-1283">loader_x&gt;=1</label>
			<label kind="synchronisation" x="-43" y="-1258">load_binary[v]!</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="assignment" x="-230" y="-1258">loader_x:=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-671" y="-1300">x_poll&gt;=1 &amp;&amp;
!victim_queue_empty()</label>
			<label kind="assignment" x="-663" y="-1258">v:=get_next_victim()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-850" y="-1258">activate_first!</label>
		</transition>
	</template>
	<template>
		<name>CnC_queue</name>
		<location id="id6" x="-1453" y="-867">
			<name x="-1463" y="-901">Idle</name>
		</location>
		<location id="id7" x="-1224" y="-867">
			<name x="-1234" y="-901">Queue_Victim</name>
			<committed/>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="assignment" x="-1394" y="-824">queue_victim(victim)</label>
			<nail x="-1266" y="-824"/>
			<nail x="-1402" y="-824"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-1360" y="-943">report?</label>
			<nail x="-1402" y="-918"/>
			<nail x="-1266" y="-918"/>
		</transition>
	</template>
	<template>
		<name>Bot_Default</name>
		<parameter>const int ip, const credentials_t credentials</parameter>
		<declaration>clock x1;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id8" x="533" y="68">
			<name x="474" y="85">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id9" x="533" y="-119">
			<name x="490" y="-154">Victim_Found</name>
			<committed/>
		</location>
		<location id="id10" x="253" y="-119">
			<name x="194" y="-153">Telnet_Port_Scan</name>
			<label kind="invariant" x="204" y="-110">x1&lt;=1</label>
		</location>
		<location id="id11" x="51" y="-119">
			<name x="17" y="-153">Inactive</name>
		</location>
		<location id="id12" x="788" y="-119">
			<name x="737" y="-102">Attack_Attempted</name>
			<label kind="invariant" x="797" y="-85">x1&lt;=1</label>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="365" y="42">report!</label>
			<label kind="assignment" x="331" y="68">victim:=target_ip</label>
			<nail x="253" y="68"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="329" y="-34">attack_attempts&gt;=10</label>
			<label kind="assignment" x="363" y="0">x1:=0</label>
			<nail x="491" y="-8"/>
			<nail x="295" y="-8"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="644" y="-255">x1&gt;=1</label>
			<nail x="788" y="-229"/>
			<nail x="533" y="-229"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="select" x="348" y="-161">ip_sel:bot_ip_t</label>
			<label kind="guard" x="372" y="-144">x1&gt;=1</label>
			<label kind="assignment" x="321" y="-119">target_ip:=ip_sel,
x1:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="select" x="603" y="-178">cd_sel:credentials_t</label>
			<label kind="guard" x="603" y="-161">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="576" y="-144">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="603" y="-119">target_cd:=cd_sel,
x1:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="601" y="42">login_success[target_ip]?</label>
			<nail x="788" y="68"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="93" y="-144">activate_first?</label>
			<label kind="assignment" x="85" y="-119">in_botnet[0]:=true,
x1:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t1</name>
		<parameter>const bot_id_t ip, const credentials_t credentials</parameter>
		<declaration>clock x2;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id13" x="-1564" y="-153">
			<name x="-1623" y="-136">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id14" x="-1564" y="-340">
			<name x="-1607" y="-375">Victim_Found</name>
			<committed/>
		</location>
		<location id="id15" x="-2091" y="-569">
			<name x="-2125" y="-603">Connected</name>
		</location>
		<location id="id16" x="-2091" y="-340">
			<name x="-2125" y="-323">Vulnerable</name>
		</location>
		<location id="id17" x="-1844" y="-340">
			<name x="-1903" y="-374">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1895" y="-331">x2&lt;=1</label>
		</location>
		<location id="id18" x="-1309" y="-340">
			<name x="-1360" y="-323">Attack_Attempted</name>
			<label kind="invariant" x="-1300" y="-306">x2&lt;=1</label>
		</location>
		<location id="id19" x="-2091" y="-450">
			<name x="-2142" y="-433">Login_Successful</name>
			<committed/>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-2082" y="-408">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-1734" y="-178">report!</label>
			<label kind="assignment" x="-1768" y="-153">victim:=target_ip</label>
			<nail x="-1844" y="-153"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id17"/>
			<label kind="guard" x="-1768" y="-255">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1734" y="-221">x2:=0</label>
			<nail x="-1606" y="-229"/>
			<nail x="-1802" y="-229"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id14"/>
			<label kind="guard" x="-1453" y="-476">x2&gt;=1</label>
			<nail x="-1309" y="-450"/>
			<nail x="-1564" y="-450"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id14"/>
			<label kind="select" x="-1751" y="-382">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1725" y="-365">x2&gt;=1</label>
			<label kind="assignment" x="-1759" y="-340">NEW_SCAN(),
target_ip:=ip_sel,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id18"/>
			<label kind="select" x="-1496" y="-399">cd_sel:credentials_t</label>
			<label kind="guard" x="-1496" y="-382">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1521" y="-365">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1496" y="-340">NEW_ATTEMPT(),
target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-1496" y="-178">login_success[target_ip]?</label>
			<nail x="-1309" y="-153"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id19"/>
			<label kind="guard" x="-2082" y="-535">credential_match()</label>
			<label kind="synchronisation" x="-2082" y="-518">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-2023" y="-365">load_binary[ip]?</label>
			<label kind="assignment" x="-1989" y="-340">x2:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t2</name>
		<parameter>const bot_id_t ip, const credentials_t credentials, const int reboot_length, const int_t reboot_period, const int period_overflows, int_t reboot_time, int time_overflows</parameter>
		<declaration>clock x2, x_reboot;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}

void reboot(){
    x2:=0;
    in_botnet[ip] := false;
    reboot_time:=reboot_period;
    time_overflows:=period_overflows;
}</declaration>
		<location id="id20" x="-1530" y="-119">
			<name x="-1589" y="-102">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id21" x="-1530" y="-306">
			<name x="-1573" y="-341">Victim_Found</name>
			<committed/>
		</location>
		<location id="id22" x="-2057" y="-535">
			<name x="-2091" y="-527">Connected</name>
			<label kind="invariant" x="-2184" y="-518">x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id23" x="-2057" y="-306">
			<name x="-2091" y="-289">Vulnerable</name>
		</location>
		<location id="id24" x="-1810" y="-306">
			<name x="-1869" y="-340">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1861" y="-297">x2&lt;=1 &amp;&amp;
x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id25" x="-1275" y="-306">
			<name x="-1326" y="-289">Attack_Attempted</name>
			<label kind="invariant" x="-1266" y="-272">x2&lt;=1 &amp;&amp;
x_reboot&lt;=reboot_time+LIMIT*time_overflows</label>
		</location>
		<location id="id26" x="-2057" y="-416">
			<name x="-2108" y="-399">Login_Successful</name>
			<committed/>
		</location>
		<location id="id27" x="-1649" y="-535">
			<name x="-1675" y="-569">Rebooting</name>
			<label kind="invariant" x="-1700" y="-527">x2&lt;=reboot_length</label>
		</location>
		<init ref="id22"/>
		<transition>
			<source ref="id25"/>
			<target ref="id27"/>
			<label kind="guard" x="-1521" y="-561">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1428" y="-535">reboot(),
current_number_bots--</label>
			<nail x="-1198" y="-535"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id27"/>
			<label kind="guard" x="-1802" y="-416">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1802" y="-399">reboot(),
current_number_bots--</label>
			<nail x="-1810" y="-442"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id27"/>
			<label kind="guard" x="-1989" y="-561">x_reboot &gt;= reboot_time+LIMIT*time_overflows</label>
			<label kind="assignment" x="-1870" y="-535">reboot()</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id22"/>
			<label kind="guard" x="-1895" y="-629">x2&gt;=reboot_length</label>
			<label kind="assignment" x="-1887" y="-603">x_reboot:=0</label>
			<nail x="-1734" y="-603"/>
			<nail x="-1963" y="-603"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-2048" y="-374">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-1700" y="-144">report!</label>
			<label kind="assignment" x="-1734" y="-119">victim:=target_ip</label>
			<nail x="-1810" y="-119"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id24"/>
			<label kind="guard" x="-1734" y="-221">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1700" y="-187">x2:=0</label>
			<nail x="-1572" y="-195"/>
			<nail x="-1768" y="-195"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id21"/>
			<label kind="guard" x="-1419" y="-442">x2&gt;=1</label>
			<nail x="-1275" y="-416"/>
			<nail x="-1530" y="-416"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id21"/>
			<label kind="select" x="-1717" y="-348">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1691" y="-331">x2&gt;=1</label>
			<label kind="assignment" x="-1725" y="-306">NEW_SCAN(),
target_ip:=ip_sel,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id25"/>
			<label kind="select" x="-1462" y="-365">cd_sel:credentials_t</label>
			<label kind="guard" x="-1462" y="-348">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1487" y="-331">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1462" y="-306">NEW_ATTEMPT(),
target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-1462" y="-144">login_success[target_ip]?</label>
			<nail x="-1275" y="-119"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id26"/>
			<label kind="guard" x="-2048" y="-493">credential_match()</label>
			<label kind="synchronisation" x="-2048" y="-476">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-1989" y="-331">load_binary[ip]?</label>
			<label kind="assignment" x="-1955" y="-306">x2:=0</label>
		</transition>
	</template>
	<system>CNC=CnC();
QUEUE=CnC_queue();
BOT_DF = Bot_Default(0,110);
BOT1 = Bot_t2(1,159,600,4000,1,2352,0);
BOT2 = Bot_t2(2,126,600,4000,1,1756,0);
BOT3 = Bot_t2(3,114,600,4000,1,21184,0);
BOT4 = Bot_t2(4,129,600,4000,1,22006,0);
BOT5 = Bot_t2(5,130,600,4000,1,25509,0);
BOT6 = Bot_t2(6,137,600,4000,1,13177,0);
BOT7 = Bot_t2(7,103,600,4000,1,27657,0);
BOT8 = Bot_t2(8,122,600,4000,1,15810,0);
BOT9 = Bot_t2(9,148,600,4000,1,29098,0);
BOT10 = Bot_t2(10,150,600,4000,1,27208,0);
BOT11 = Bot_t2(11,123,600,4000,1,13838,0);
BOT12 = Bot_t2(12,105,600,4000,1,31134,0);
BOT13 = Bot_t2(13,115,600,4000,1,30718,0);
BOT14 = Bot_t2(14,124,600,4000,1,1424,1);
BOT15 = Bot_t2(15,124,600,4000,1,22198,0);
BOT16 = Bot_t2(16,116,600,4000,1,29955,0);
BOT17 = Bot_t2(17,160,600,4000,1,3095,1);
BOT18 = Bot_t2(18,157,600,4000,1,18928,0);
BOT19 = Bot_t2(19,158,600,4000,1,29132,0);
BOT20 = Bot_t2(20,148,600,4000,1,21103,0);
BOT21 = Bot_t2(21,103,600,4000,1,20095,0);
BOT22 = Bot_t2(22,149,600,4000,1,8836,0);
BOT23 = Bot_t2(23,150,600,4000,1,15616,0);
BOT24 = Bot_t2(24,140,600,4000,1,6991,0);
BOT25 = Bot_t2(25,109,600,4000,1,16440,0);
BOT26 = Bot_t2(26,112,600,4000,1,3501,0);
BOT27 = Bot_t2(27,117,600,4000,1,31672,0);
BOT28 = Bot_t2(28,144,600,4000,1,20734,0);
BOT29 = Bot_t2(29,112,600,4000,1,3429,0);
BOT30 = Bot_t2(30,126,600,4000,1,22009,0);
BOT31 = Bot_t2(31,103,600,4000,1,10917,0);
BOT32 = Bot_t2(32,106,600,4000,1,22185,0);
BOT33 = Bot_t2(33,109,600,4000,1,18551,0);
BOT34 = Bot_t2(34,117,600,4000,1,29365,0);
BOT35 = Bot_t2(35,148,600,4000,1,8777,0);
BOT36 = Bot_t2(36,101,600,4000,1,17771,0);
BOT37 = Bot_t2(37,159,600,4000,1,4246,0);
BOT38 = Bot_t2(38,155,600,4000,1,8736,0);
BOT39 = Bot_t2(39,162,600,4000,1,18846,0);
BOT40 = Bot_t2(40,156,600,4000,1,31755,0);
BOT41 = Bot_t2(41,134,600,4000,1,20419,0);
BOT42 = Bot_t2(42,150,600,4000,1,11243,0);
BOT43 = Bot_t2(43,115,600,4000,1,4276,0);
BOT44 = Bot_t2(44,101,600,4000,1,1943,0);
BOT45 = Bot_t2(45,147,600,4000,1,23053,0);
BOT46 = Bot_t2(46,151,600,4000,1,14581,0);
BOT47 = Bot_t2(47,103,600,4000,1,1830,0);
BOT48 = Bot_t2(48,108,600,4000,1,26510,0);
BOT49 = Bot_t2(49,122,600,4000,1,10445,0);
BOT50 = Bot_t2(50,120,600,4000,1,20618,0);
BOT51 = Bot_t2(51,151,600,4000,1,16383,0);
BOT52 = Bot_t2(52,148,600,4000,1,2286,1);
BOT53 = Bot_t2(53,113,600,4000,1,30388,0);
BOT54 = Bot_t2(54,152,600,4000,1,8010,0);
BOT55 = Bot_t2(55,143,600,4000,1,19407,0);
BOT56 = Bot_t2(56,117,600,4000,1,21587,0);
BOT57 = Bot_t2(57,152,600,4000,1,14527,0);
BOT58 = Bot_t2(58,116,600,4000,1,30604,0);
BOT59 = Bot_t2(59,133,600,4000,1,7078,0);
BOT60 = Bot_t2(60,139,600,4000,1,9271,0);
BOT61 = Bot_t2(61,107,600,4000,1,20030,0);
BOT62 = Bot_t2(62,113,600,4000,1,13781,0);
BOT63 = Bot_t2(63,144,600,4000,1,22672,0);
BOT64 = Bot_t2(64,157,600,4000,1,19088,0);
BOT65 = Bot_t2(65,153,600,4000,1,22607,0);
BOT66 = Bot_t2(66,109,600,4000,1,20126,0);
BOT67 = Bot_t2(67,113,600,4000,1,6018,0);
BOT68 = Bot_t2(68,155,600,4000,1,2239,0);
BOT69 = Bot_t2(69,104,600,4000,1,8240,0);
BOT70 = Bot_t2(70,159,600,4000,1,27901,0);
BOT71 = Bot_t2(71,132,600,4000,1,22164,0);
BOT72 = Bot_t2(72,140,600,4000,1,16060,0);
BOT73 = Bot_t2(73,160,600,4000,1,18944,0);
BOT74 = Bot_t2(74,156,600,4000,1,31963,0);
BOT75 = Bot_t2(75,124,600,4000,1,13019,0);
BOT76 = Bot_t2(76,151,600,4000,1,5999,0);
BOT77 = Bot_t2(77,111,600,4000,1,539,0);
BOT78 = Bot_t2(78,131,600,4000,1,3492,1);
BOT79 = Bot_t2(79,118,600,4000,1,25063,0);
BOT80 = Bot_t2(80,122,600,4000,1,4059,0);
BOT81 = Bot_t2(81,144,600,4000,1,1842,0);
BOT82 = Bot_t2(82,134,600,4000,1,26407,0);
BOT83 = Bot_t2(83,144,600,4000,1,3618,1);
BOT84 = Bot_t2(84,128,600,4000,1,9221,0);
BOT85 = Bot_t2(85,121,600,4000,1,25717,0);
BOT86 = Bot_t2(86,161,600,4000,1,18104,0);
BOT87 = Bot_t2(87,125,600,4000,1,27328,0);
BOT88 = Bot_t2(88,155,600,4000,1,961,0);
BOT89 = Bot_t2(89,150,600,4000,1,30811,0);
BOT90 = Bot_t2(90,114,600,4000,1,13493,0);
BOT91 = Bot_t2(91,151,600,4000,1,5654,0);
BOT92 = Bot_t2(92,137,600,4000,1,24115,0);
BOT93 = Bot_t2(93,101,600,4000,1,14318,0);
BOT94 = Bot_t2(94,138,600,4000,1,2399,1);
BOT95 = Bot_t2(95,110,600,4000,1,3317,1);
BOT96 = Bot_t2(96,106,600,4000,1,1798,0);
BOT97 = Bot_t2(97,102,600,4000,1,10445,0);
BOT98 = Bot_t2(98,144,600,4000,1,14245,0);
BOT99 = Bot_t2(99,133,600,4000,1,937,1);
BOT100 = Bot_t2(100,162,600,4000,1,15482,0);
BOT101 = Bot_t2(101,142,600,4000,1,7606,0);
BOT102 = Bot_t2(102,104,600,4000,1,11402,0);
BOT103 = Bot_t2(103,113,600,4000,1,13643,0);
BOT104 = Bot_t2(104,162,600,4000,1,5290,0);
BOT105 = Bot_t2(105,135,600,4000,1,23371,0);
BOT106 = Bot_t2(106,117,600,4000,1,31681,0);
BOT107 = Bot_t2(107,116,600,4000,1,18318,0);
BOT108 = Bot_t2(108,105,600,4000,1,18477,0);
BOT109 = Bot_t2(109,118,600,4000,1,4418,0);
BOT110 = Bot_t2(110,134,600,4000,1,5711,0);
BOT111 = Bot_t2(111,119,600,4000,1,30609,0);
BOT112 = Bot_t2(112,127,600,4000,1,993,0);
BOT113 = Bot_t2(113,123,600,4000,1,16696,0);
BOT114 = Bot_t2(114,128,600,4000,1,12686,0);
BOT115 = Bot_t2(115,108,600,4000,1,28725,0);
BOT116 = Bot_t2(116,138,600,4000,1,25360,0);
BOT117 = Bot_t2(117,148,600,4000,1,21022,0);
BOT118 = Bot_t2(118,114,600,4000,1,29758,0);
BOT119 = Bot_t2(119,124,600,4000,1,2906,0);
BOT120 = Bot_t2(120,107,600,4000,1,21547,0);
BOT121 = Bot_t2(121,138,600,4000,1,4135,0);
BOT122 = Bot_t2(122,108,600,4000,1,23581,0);
BOT123 = Bot_t2(123,143,600,4000,1,19251,0);
BOT124 = Bot_t2(124,154,600,4000,1,25497,0);
BOT125 = Bot_t2(125,157,600,4000,1,17001,0);
BOT126 = Bot_t2(126,119,600,4000,1,16048,0);
BOT127 = Bot_t2(127,124,600,4000,1,2620,0);
BOT128 = Bot_t2(128,109,600,4000,1,23448,0);
BOT129 = Bot_t2(129,101,600,4000,1,7373,0);
BOT130 = Bot_t2(130,150,600,4000,1,11190,0);
BOT131 = Bot_t2(131,105,600,4000,1,12400,0);
BOT132 = Bot_t2(132,151,600,4000,1,22200,0);
BOT133 = Bot_t2(133,106,600,4000,1,5938,0);
BOT134 = Bot_t2(134,114,600,4000,1,14897,0);
BOT135 = Bot_t2(135,121,600,4000,1,21889,0);
BOT136 = Bot_t2(136,124,600,4000,1,3532,1);
BOT137 = Bot_t2(137,159,600,4000,1,7731,0);
BOT138 = Bot_t2(138,127,600,4000,1,16289,0);
BOT139 = Bot_t2(139,128,600,4000,1,2050,1);
BOT140 = Bot_t2(140,161,600,4000,1,19395,0);
BOT141 = Bot_t2(141,130,600,4000,1,2831,0);
BOT142 = Bot_t2(142,120,600,4000,1,30513,0);
BOT143 = Bot_t2(143,145,600,4000,1,14073,0);
BOT144 = Bot_t2(144,141,600,4000,1,21671,0);
BOT145 = Bot_t2(145,117,600,4000,1,30001,0);
BOT146 = Bot_t2(146,108,600,4000,1,9773,0);
BOT147 = Bot_t2(147,131,600,4000,1,13427,0);
BOT148 = Bot_t2(148,152,600,4000,1,8557,0);
BOT149 = Bot_t2(149,104,600,4000,1,12456,0);
BOT150 = Bot_t2(150,110,600,4000,1,26526,0);
BOT151 = Bot_t2(151,115,600,4000,1,16089,0);
BOT152 = Bot_t2(152,145,600,4000,1,4530,0);
BOT153 = Bot_t2(153,147,600,4000,1,2807,0);
BOT154 = Bot_t2(154,138,600,4000,1,21964,0);
BOT155 = Bot_t2(155,131,600,4000,1,13098,0);
BOT156 = Bot_t2(156,104,600,4000,1,2837,0);
BOT157 = Bot_t2(157,148,600,4000,1,20756,0);
BOT158 = Bot_t2(158,102,600,4000,1,27587,0);
BOT159 = Bot_t2(159,139,600,4000,1,1105,1);
BOT160 = Bot_t2(160,105,600,4000,1,14913,0);
BOT161 = Bot_t2(161,158,600,4000,1,22170,0);
BOT162 = Bot_t2(162,143,600,4000,1,3182,0);
BOT163 = Bot_t2(163,126,600,4000,1,22559,0);
BOT164 = Bot_t2(164,117,600,4000,1,6949,0);
BOT165 = Bot_t2(165,109,600,4000,1,3776,0);
BOT166 = Bot_t2(166,124,600,4000,1,30703,0);
BOT167 = Bot_t2(167,136,600,4000,1,3324,0);
BOT168 = Bot_t2(168,107,600,4000,1,2708,1);
BOT169 = Bot_t2(169,128,600,4000,1,31497,0);
BOT170 = Bot_t2(170,153,600,4000,1,20295,0);
BOT171 = Bot_t2(171,139,600,4000,1,4872,0);
BOT172 = Bot_t2(172,112,600,4000,1,25479,0);
BOT173 = Bot_t2(173,133,600,4000,1,30788,0);
BOT174 = Bot_t2(174,130,600,4000,1,14849,0);
BOT175 = Bot_t2(175,133,600,4000,1,1635,0);
BOT176 = Bot_t2(176,138,600,4000,1,16493,0);
BOT177 = Bot_t2(177,115,600,4000,1,26636,0);
BOT178 = Bot_t2(178,131,600,4000,1,3808,0);
BOT179 = Bot_t2(179,141,600,4000,1,1508,1);
BOT180 = Bot_t2(180,156,600,4000,1,18533,0);
BOT181 = Bot_t2(181,145,600,4000,1,9022,0);
BOT182 = Bot_t2(182,148,600,4000,1,1520,0);
BOT183 = Bot_t2(183,136,600,4000,1,595,1);
BOT184 = Bot_t2(184,155,600,4000,1,25490,0);
BOT185 = Bot_t2(185,112,600,4000,1,1985,1);
BOT186 = Bot_t2(186,138,600,4000,1,8620,0);
BOT187 = Bot_t2(187,128,600,4000,1,30414,0);
BOT188 = Bot_t2(188,162,600,4000,1,29392,0);
BOT189 = Bot_t2(189,123,600,4000,1,4578,0);
BOT190 = Bot_t2(190,140,600,4000,1,17742,0);
BOT191 = Bot_t2(191,119,600,4000,1,20906,0);
BOT192 = Bot_t2(192,144,600,4000,1,4611,0);
BOT193 = Bot_t2(193,102,600,4000,1,17973,0);
BOT194 = Bot_t2(194,144,600,4000,1,24933,0);
BOT195 = Bot_t2(195,155,600,4000,1,15610,0);
BOT196 = Bot_t2(196,126,600,4000,1,31962,0);
BOT197 = Bot_t2(197,106,600,4000,1,4488,0);
BOT198 = Bot_t2(198,156,600,4000,1,14922,0);
BOT199 = Bot_t2(199,126,600,4000,1,24861,0);
BOT200 = Bot_t2(200,112,600,4000,1,7831,0);
BOT201 = Bot_t2(201,108,600,4000,1,19561,0);
BOT202 = Bot_t2(202,117,600,4000,1,27346,0);
BOT203 = Bot_t2(203,136,600,4000,1,24195,0);
BOT204 = Bot_t2(204,121,600,4000,1,17673,0);
BOT205 = Bot_t2(205,153,600,4000,1,27671,0);
BOT206 = Bot_t2(206,114,600,4000,1,23867,0);
BOT207 = Bot_t2(207,119,600,4000,1,29010,0);
BOT208 = Bot_t2(208,119,600,4000,1,23630,0);
BOT209 = Bot_t2(209,124,600,4000,1,31347,0);
BOT210 = Bot_t2(210,147,600,4000,1,10521,0);
BOT211 = Bot_t2(211,152,600,4000,1,3272,1);
BOT212 = Bot_t2(212,148,600,4000,1,1479,1);
BOT213 = Bot_t2(213,132,600,4000,1,8451,0);
BOT214 = Bot_t2(214,137,600,4000,1,29133,0);
BOT215 = Bot_t2(215,121,600,4000,1,27699,0);
BOT216 = Bot_t2(216,104,600,4000,1,19253,0);
BOT217 = Bot_t2(217,139,600,4000,1,15298,0);
BOT218 = Bot_t2(218,101,600,4000,1,23354,0);
BOT219 = Bot_t2(219,134,600,4000,1,30830,0);
BOT220 = Bot_t2(220,132,600,4000,1,10193,0);
BOT221 = Bot_t2(221,151,600,4000,1,18340,0);
BOT222 = Bot_t2(222,122,600,4000,1,19408,0);
BOT223 = Bot_t2(223,158,600,4000,1,4803,0);
BOT224 = Bot_t2(224,145,600,4000,1,390,1);
BOT225 = Bot_t2(225,136,600,4000,1,8871,0);
BOT226 = Bot_t2(226,109,600,4000,1,3344,0);
BOT227 = Bot_t2(227,152,600,4000,1,18876,0);
BOT228 = Bot_t2(228,151,600,4000,1,7984,0);
BOT229 = Bot_t2(229,157,600,4000,1,24176,0);
BOT230 = Bot_t2(230,156,600,4000,1,787,0);
BOT231 = Bot_t2(231,102,600,4000,1,8122,0);
BOT232 = Bot_t2(232,154,600,4000,1,16159,0);
BOT233 = Bot_t2(233,135,600,4000,1,5329,0);
BOT234 = Bot_t2(234,136,600,4000,1,6934,0);
BOT235 = Bot_t2(235,103,600,4000,1,31846,0);
BOT236 = Bot_t2(236,107,600,4000,1,8565,0);
BOT237 = Bot_t2(237,161,600,4000,1,21890,0);
BOT238 = Bot_t2(238,138,600,4000,1,13624,0);
BOT239 = Bot_t2(239,130,600,4000,1,3539,1);
BOT240 = Bot_t2(240,161,600,4000,1,31086,0);
BOT241 = Bot_t2(241,137,600,4000,1,20682,0);
BOT242 = Bot_t2(242,108,600,4000,1,27898,0);
BOT243 = Bot_t2(243,108,600,4000,1,18130,0);
BOT244 = Bot_t2(244,111,600,4000,1,3367,0);
BOT245 = Bot_t2(245,122,600,4000,1,7403,0);
BOT246 = Bot_t2(246,123,600,4000,1,6178,0);
BOT247 = Bot_t2(247,126,600,4000,1,8060,0);
BOT248 = Bot_t2(248,140,600,4000,1,12190,0);
BOT249 = Bot_t2(249,161,600,4000,1,229,0);
BOT250 = Bot_t2(250,126,600,4000,1,484,0);
system CNC, QUEUE, BOT_DF, BOT1, BOT2, BOT3, BOT4, BOT5, BOT6, BOT7, BOT8, BOT9, BOT10, BOT11, BOT12, BOT13, BOT14, BOT15, BOT16, BOT17, BOT18, BOT19, BOT20, BOT21, BOT22, BOT23, BOT24, BOT25, BOT26, BOT27, BOT28, BOT29, BOT30, BOT31, BOT32, BOT33, BOT34, BOT35, BOT36, BOT37, BOT38, BOT39, BOT40, BOT41, BOT42, BOT43, BOT44, BOT45, BOT46, BOT47, BOT48, BOT49, BOT50, BOT51, BOT52, BOT53, BOT54, BOT55, BOT56, BOT57, BOT58, BOT59, BOT60, BOT61, BOT62, BOT63, BOT64, BOT65, BOT66, BOT67, BOT68, BOT69, BOT70, BOT71, BOT72, BOT73, BOT74, BOT75, BOT76, BOT77, BOT78, BOT79, BOT80, BOT81, BOT82, BOT83, BOT84, BOT85, BOT86, BOT87, BOT88, BOT89, BOT90, BOT91, BOT92, BOT93, BOT94, BOT95, BOT96, BOT97, BOT98, BOT99, BOT100, BOT101, BOT102, BOT103, BOT104, BOT105, BOT106, BOT107, BOT108, BOT109, BOT110, BOT111, BOT112, BOT113, BOT114, BOT115, BOT116, BOT117, BOT118, BOT119, BOT120, BOT121, BOT122, BOT123, BOT124, BOT125, BOT126, BOT127, BOT128, BOT129, BOT130, BOT131, BOT132, BOT133, BOT134, BOT135, BOT136, BOT137, BOT138, BOT139, BOT140, BOT141, BOT142, BOT143, BOT144, BOT145, BOT146, BOT147, BOT148, BOT149, BOT150, BOT151, BOT152, BOT153, BOT154, BOT155, BOT156, BOT157, BOT158, BOT159, BOT160, BOT161, BOT162, BOT163, BOT164, BOT165, BOT166, BOT167, BOT168, BOT169, BOT170, BOT171, BOT172, BOT173, BOT174, BOT175, BOT176, BOT177, BOT178, BOT179, BOT180, BOT181, BOT182, BOT183, BOT184, BOT185, BOT186, BOT187, BOT188, BOT189, BOT190, BOT191, BOT192, BOT193, BOT194, BOT195, BOT196, BOT197, BOT198, BOT199, BOT200, BOT201, BOT202, BOT203, BOT204, BOT205, BOT206, BOT207, BOT208, BOT209, BOT210, BOT211, BOT212, BOT213, BOT214, BOT215, BOT216, BOT217, BOT218, BOT219, BOT220, BOT221, BOT222, BOT223, BOT224, BOT225, BOT226, BOT227, BOT228, BOT229, BOT230, BOT231, BOT232, BOT233, BOT234, BOT235, BOT236, BOT237, BOT238, BOT239, BOT240, BOT241, BOT242, BOT243, BOT244, BOT245, BOT246, BOT247, BOT248, BOT249, BOT250;
</system>
	<queries>
		<query>
			<formula>A[] total_time==50 imply current_number_bots+==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; total_time == 5
</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=500] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=500; 15] {BOT_DF.Telnet_Port_Scan, BOT_DF.Victim_Found}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=50] {in_botnet[1]}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==1)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==2)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==3)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25; 500] (&lt;&gt;current_number_bots==4)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- MODEL VERIFICATION -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] !deadlock</formula>
			<comment>Deadlocks never occur</comment>
		</query>
		<query>
			<formula>A[] deadlock imply current_number_bots==total_devices-1</formula>
			<comment>A deadlock implies that all devices have been infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- INFECTION REACHABILITY -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment>All devices will always be infected in every possible scenario</comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment>It is possible for every device to eventually be infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- INFECTION TIMES -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] total_time==50 imply current_number_bots==total_devices-1</formula>
			<comment>All devices are always infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=100; 100] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 100 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=50] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 50 time units</comment>
		</query>
		<query>
			<formula>Pr[total_time&lt;=25] (&lt;&gt;current_number_bots==total_devices-1)</formula>
			<comment>The probability all devices are compromised in 25 time units</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=10; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 10 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=20; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 20 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=25; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 25 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=30; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 30 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=40; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 40 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=50; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 50 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=60; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 60 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=70; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 70 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=80; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 80 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=90; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 90 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>E [total_time&lt;=100; 100] (max: current_number_bots)</formula>
			<comment>The expected number of compromised devices in 100 time units (generated with 100 simulation runs)</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[1])</formula>
			<comment>The probability bot 1 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[2])</formula>
			<comment>The probability bot 2 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[3])</formula>
			<comment>The probability bot 3 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[4])</formula>
			<comment>The probability bot 4 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;in_botnet[5])</formula>
			<comment>The probability bot 5 has been infected by 50 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment>The probability bot 1 has been infected by 25 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment>The probability bots 1 and 2 have been infected by 25 time units</comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment>The probability bots 1, 2 , and 3 have been infected by 25 time units</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=10000; 1] {current_number_bots}</formula>
			<comment>simulate 100 runs for 100 time units each and plot the number of infected bots against simulation time</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=5000; 10] {in_botnet[1], in_botnet[2], in_botnet[3], in_botnet[4], in_botnet[5]}</formula>
			<comment>simulate 100 runs for 100 time units each and plot when each bot becomes infected</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>&lt;----- Network Traffic -----&gt;</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=32] (&lt;&gt; total_messages&gt;75)</formula>
			<comment>Probability that at least 75 messages are sent over the network in 32 time units (which is the expected time the infect all 5 devices)</comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=100; 100] {total_scans, total_attempts} : current_number_bots==total_devices-1</formula>
			<comment>Simulate 100 runs for either 100 time units, or until every bot is infected, and plot the number of network scans and login attempts</comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=5000; 1] {BOT9.Rebooting}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate [total_time&lt;=1000; 1] {current_number_bots} : current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>BOT1.Vulnerable --&gt; BOT1.Telnet_Port_Scan</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
