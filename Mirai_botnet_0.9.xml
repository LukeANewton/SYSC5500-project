<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//***********************************************************
//Variables
//***********************************************************
urgent broadcast chan activate_first, new_victim, activate_new, activated, report, start_loader;
broadcast chan setup;

const int total_devices = 3;                     //the number of devices in the network
int current_number_bots = 0;                     //the number of infected devices at any given time
typedef int[0, total_devices-1] bot_id_t;        //possible values for bot ids
typedef int[1, 10] credentials_t;                //possible values for credentials

chan dictionary_attack[total_devices];           //a channel for each device representing the attempted login on that device
chan login_success[total_devices];               //a channel for each device representing the a successful login response to the attacking bot
chan login_failed[total_devices];                //a channel for each device representing the a failed login response to the attacking bot
chan load_binary[total_devices];                 //a channel for each device representing the command to begin secondary infection

bot_id_t victim_id;                              //the id of the bot currently being infected
bool in_botnet[total_devices];                   //the list of currently infected bot IDs (the index value is the device id and the value indicates if the device is in the botnet)
credentials_t credential_attempt[total_devices]; //a list to represent passing credentials from attacking bot to device under attack

int i;                                           //an integer to iterate over arrays
clock x, total_time;




//***********************************************************
//Functions
//***********************************************************
bool MATCH(bot_id_t id){
    return in_botnet[id];
}

void ADD_RECORD(bot_id_t id){
    in_botnet[id] := true;
    current_number_bots += 1;
}


//***********************************************************
//Gantt Color Codes
//***********************************************************
const int Color_Blue = 2;
const int Color_LBlue = 18;
const int Color_Cyan = 9;

const int Color_Purple = 3;
const int Color_DPurple = 20;

const int Color_Green = 8;
const int Color_LGreen = 24;

const int Color_Red = 0;
const int Color_Pink = 12;

const int Color_Orange = 5;
const int Color_LOrange = 14;
const int Color_Yellow = 6;</declaration>
	<template>
		<name>Mirai_Master</name>
		<location id="id0" x="-476" y="-119">
			<name x="-493" y="-153">Initial</name>
			<label kind="invariant" x="-493" y="-111">x&lt;=5</label>
		</location>
		<location id="id1" x="-331" y="-119">
			<name x="-374" y="-153">Setup_Servers</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-425" y="-162">x&gt;=2</label>
			<label kind="synchronisation" x="-425" y="-145">setup!</label>
		</transition>
	</template>
	<template>
		<name>CnC_Server</name>
		<location id="id2" x="-1097" y="-229">
			<name x="-1107" y="-263">Idle</name>
		</location>
		<location id="id3" x="-943" y="-229">
			<name x="-978" y="-263">Pre_Active</name>
		</location>
		<location id="id4" x="-765" y="-229">
			<name x="-782" y="-263">Active</name>
		</location>
		<location id="id5" x="-586" y="-323">
			<name x="-620" y="-306">IM_Stage_1</name>
			<committed/>
		</location>
		<location id="id6" x="-586" y="-136">
			<name x="-620" y="-119">IM_Stage_2</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-731" y="-178">activated?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-578" y="-229">activate_new!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-731" y="-306">new_victim?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-901" y="-254">activate_first!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-1046" y="-254">setup?</label>
		</transition>
	</template>
	<template>
		<name>ScanListen_Server</name>
		<location id="id7" x="-781" y="-221">
			<name x="-791" y="-255">Idle</name>
		</location>
		<location id="id8" x="-620" y="-221">
			<name x="-636" y="-255">Wait</name>
		</location>
		<location id="id9" x="-467" y="-221">
			<name x="-509" y="-255">New_Credentials</name>
			<committed/>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-612" y="-340">!in_botnet[victim_id]</label>
			<label kind="synchronisation" x="-586" y="-297">start_loader!</label>
			<label kind="assignment" x="-629" y="-323">ADD_RECORD(victim_id)</label>
			<nail x="-493" y="-297"/>
			<nail x="-595" y="-297"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-612" y="-144">in_botnet[victim_id]</label>
			<nail x="-493" y="-144"/>
			<nail x="-595" y="-144"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-569" y="-221">report?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-722" y="-246">setup?</label>
		</transition>
	</template>
	<template>
		<name>Loader</name>
		<declaration>clock loader_x;</declaration>
		<location id="id10" x="178" y="-68">
			<name x="152" y="-102">Loaded</name>
			<committed/>
		</location>
		<location id="id11" x="-230" y="-68">
			<name x="-256" y="-102">Standby</name>
		</location>
		<location id="id12" x="-51" y="-68">
			<name x="-77" y="-102">Loading</name>
			<label kind="invariant" x="-85" y="-60">loader_x&lt;=2</label>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-85" y="0">new_victim!</label>
			<nail x="178" y="25"/>
			<nail x="-230" y="25"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-9" y="-110">loader_x&gt;=1</label>
			<label kind="synchronisation" x="-9" y="-93">load_binary[victim_id]!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-187" y="-93">start_loader?</label>
			<label kind="assignment" x="-187" y="-68">loader_x:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_First</name>
		<declaration>clock x1;
int attack_attempts;
bot_id_t target;
credentials_t credentials;

void send_credential(credentials_t c){
    attack_attempts += 1;
    credential_attempt[target] = c;
}</declaration>
		<location id="id13" x="-637" y="-348">
			<name x="-663" y="-382">Inactive</name>
		</location>
		<location id="id14" x="-467" y="-348">
			<name x="-484" y="-382">Active</name>
			<urgent/>
		</location>
		<location id="id15" x="281" y="-483">
			<name x="238" y="-517">Attack_Failed</name>
			<committed/>
		</location>
		<location id="id16" x="17" y="-347">
			<name x="-26" y="-382">Victim_Found</name>
			<label kind="invariant" x="25" y="-340">x1&lt;=10</label>
		</location>
		<location id="id17" x="-348" y="-347">
			<name x="-408" y="-381">Telnet_Port_Scan</name>
			<label kind="invariant" x="-331" y="-339">x1&lt;=5</label>
		</location>
		<location id="id18" x="281" y="-347">
			<name x="230" y="-339">Attack_Attempted</name>
		</location>
		<location id="id19" x="-51" y="-42">
			<name x="-110" y="-25">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id20" x="-348" y="-42">
			<name x="-374" y="-25">Reported</name>
			<committed/>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="select" x="-238" y="-374">t:bot_id_t</label>
			<label kind="assignment" x="-238" y="-348">x1:=0,
attack_attempts:=0,
target=t</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id17"/>
			<label kind="assignment" x="-450" y="-346">x1:=0</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-595" y="-370">activate_first?</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="86" y="-508">attack_attempts&lt;=10</label>
			<nail x="18" y="-483"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="guard" x="-110" y="-627">attack_attempts&gt;10</label>
			<nail x="281" y="-602"/>
			<nail x="-348" y="-602"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="290" y="-423">login_failed[target]?</label>
			<label kind="assignment" x="332" y="-406">x1:=0</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id18"/>
			<label kind="select" x="110" y="-399">c:credentials_t</label>
			<label kind="guard" x="144" y="-365">x1&gt;0</label>
			<label kind="synchronisation" x="85" y="-382">dictionary_attack[target]!</label>
			<label kind="assignment" x="110" y="-348">send_credential(c)</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="94" y="-67">login_success[target]?</label>
			<label kind="assignment" x="111" y="-41">victim_id:=target</label>
			<nail x="281" y="-41"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="assignment" x="-340" y="-212">x1:=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-221" y="-68">report!</label>
		</transition>
	</template>
	<template>
		<name>Bot</name>
		<parameter>const bot_id_t id</parameter>
		<declaration>clock x2;
int attack_attempts;
bot_id_t target;
credentials_t credentials;

bool credential_match(){
    return credentials == credential_attempt[id];
}

void send_credential(credentials_t c){
    attack_attempts += 1;
    credential_attempt[target] = c;
}</declaration>
		<location id="id21" x="-1641" y="-35">
			<name x="-1700" y="-18">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id22" x="-1573" y="-340">
			<name x="-1616" y="-375">Victim_Found</name>
			<label kind="invariant" x="-1565" y="-333">x2&lt;=10</label>
		</location>
		<location id="id23" x="-2840" y="-426">
			<name x="-2874" y="-418">Connected</name>
		</location>
		<location id="id24" x="-2389" y="-340">
			<name x="-2448" y="-323">Login_Successful</name>
		</location>
		<location id="id25" x="-2091" y="-340">
			<name x="-2109" y="-324">Active</name>
		</location>
		<location id="id26" x="-1938" y="-340">
			<name x="-1998" y="-374">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1921" y="-332">x2&lt;=5</label>
		</location>
		<location id="id27" x="-1938" y="-35">
			<name x="-1964" y="-18">Reported</name>
			<committed/>
		</location>
		<location id="id28" x="-2840" y="-580">
			<name x="-2865" y="-614">Inactive</name>
			<label kind="invariant" x="-2883" y="-571">x2&lt;=5</label>
		</location>
		<location id="id29" x="-2236" y="-341">
			<name x="-2279" y="-324">Compromised</name>
		</location>
		<location id="id30" x="-2627" y="-341">
			<name x="-2678" y="-324">Login_Attempted</name>
			<label kind="invariant" x="-2618" y="-340">x2&lt;=5</label>
		</location>
		<location id="id31" x="-1309" y="-340">
			<name x="-1360" y="-332">Attack_Attempted</name>
		</location>
		<location id="id32" x="-1743" y="-341">
			<committed/>
		</location>
		<location id="id33" x="-1309" y="-476">
			<name x="-1352" y="-510">Attack_Failed</name>
			<committed/>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id33"/>
			<target ref="id22"/>
			<label kind="guard" x="-1504" y="-501">attack_attempts&lt;=10</label>
			<nail x="-1572" y="-476"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id26"/>
			<label kind="guard" x="-1700" y="-620">attack_attempts&gt;10</label>
			<nail x="-1309" y="-595"/>
			<nail x="-1938" y="-595"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-1300" y="-416">login_failed[target]?</label>
			<label kind="assignment" x="-1258" y="-399">x2:=0</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id32"/>
			<label kind="select" x="-1769" y="-426">t:bot_id_t</label>
			<label kind="guard" x="-1777" y="-452">target==id</label>
			<label kind="assignment" x="-1769" y="-409">target:=t</label>
			<nail x="-1667" y="-426"/>
			<nail x="-1811" y="-426"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id22"/>
			<label kind="guard" x="-1692" y="-367">target!=id</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id32"/>
			<label kind="select" x="-1862" y="-367">t:bot_id_t</label>
			<label kind="assignment" x="-1862" y="-333">x2:=0,
attack_attempts:=0,
target:=t</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id31"/>
			<label kind="select" x="-1480" y="-392">c:credentials_t</label>
			<label kind="guard" x="-1446" y="-358">x2&gt;0</label>
			<label kind="synchronisation" x="-1505" y="-375">dictionary_attack[target]!</label>
			<label kind="assignment" x="-1480" y="-341">send_credential(c)</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-1496" y="-60">login_success[target]?</label>
			<label kind="assignment" x="-1479" y="-34">victim_id:=target</label>
			<nail x="-1309" y="-34"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id24"/>
			<label kind="guard" x="-2559" y="-341">credential_match()</label>
			<label kind="synchronisation" x="-2559" y="-367">login_success[id]!</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id23"/>
			<label kind="guard" x="-2797" y="-341">!credential_match()</label>
			<label kind="synchronisation" x="-2797" y="-368">login_failed[id]!</label>
			<nail x="-2840" y="-341"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-2797" y="-452">dictionary_attack[id]?</label>
			<label kind="assignment" x="-2745" y="-425">x2:=0</label>
			<nail x="-2627" y="-426"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-2211" y="-367">activate_new?</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id23"/>
			<label kind="select" x="-2832" y="-545">c:credentials_t</label>
			<label kind="assignment" x="-2831" y="-520">credentials:=c</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="assignment" x="-1930" y="-205">x2:=0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-1811" y="-61">report!</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="-2058" y="-367">activated!</label>
			<label kind="assignment" x="-2041" y="-341">x2:=0</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-2363" y="-366">load_binary[id]?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
MIRAI = Mirai_Master();
CNC_SRV = CnC_Server();
SCAN_SRV = ScanListen_Server();

LDR = Loader();

BOT_F = Bot_First();

// List one or more processes to be composed into a system.
system MIRAI, CNC_SRV, SCAN_SRV, LDR, BOT_F, Bot;
    


//************************************************
//Gantt Chart
//************************************************

gantt {

//=====================AGENTS=====================
    //Storage Agent
//    S_Empty:     S.Empty -&gt; Color_Cyan;
    
//=====================SERVERS=====================
    CnC_Server_Active:     CNC_SRV.Active -&gt; Color_Blue;
    Scan_Server_Active:    SCAN_SRV.Wait -&gt; Color_Blue;  
    Loading_Binary:        LDR.Loading -&gt; Color_Purple;

//=====================BOTs=====================

    BOT_DF_Scan:        BOT_F.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_DF_Attacking:   BOT_F.Victim_Found -&gt; Color_Red; 

    Bot(j:bot_id_t):
          Bot(j).Connected -&gt; Color_Green,
          Bot(j).Telnet_Port_Scan -&gt; Color_LOrange,
          Bot(j).Victim_Found -&gt; Color_Red,
          Bot(j).Attack_Attempted -&gt; Color_Yellow; 

}</system>
	<queries>
		<query>
			<formula>A[] !deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] current_number_bots &lt;= total_devices</formula>
			<comment>check that the counter for the number of bots never exceeds the total number of devices</comment>
		</query>
	</queries>
</nta>
