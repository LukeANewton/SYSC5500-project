<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//***********************************************************
//Variables
//***********************************************************
urgent broadcast chan activate_first, new_victim, activate_new, activated, report, start_loader;
broadcast chan setup;

const int total_devices = 2;               //the number of devices in the network
int current_number_bots = 0;               //the number of infected devices at any given time
typedef int[0, total_devices-1] bot_id_t;

chan dictionary_attack[total_devices];     //a channel for each device representing the attempted attack on that device
chan load_binary[total_devices];           //a channel for each device representing the command to begin secondary infection

int[0, total_devices] victim_id := 0;        //the id of the bot currently being infected
bool in_botnet[total_devices];              //the list of currently infected bot IDs (the index value is the device id and the value indicates if the device is in the botnet)
int [0, total_devices] i := 0;

clock x, total_time;

// we should initialize in_botnet array
// to ensure the model behaves as intended
for (i:=0; i&lt;total_devices; i++){
    in_botnet[i] = false;
}





//***********************************************************
//Functions
//***********************************************************
void GET_ID(){
    victim_id:=id;
}


bool MATCH(int id){
    return in_botnet[id];
}

void ADD_RECORD(int id){
    in_botnet[id] := true;
    current_number_bots += 1;
}


//***********************************************************
//Gantt Color Codes
//***********************************************************
const int Color_Blue = 2;
const int Color_LBlue = 18;
const int Color_Cyan = 9;

const int Color_Purple = 3;
const int Color_DPurple = 20;

const int Color_Green = 8;
const int Color_LGreen = 24;

const int Color_Red = 0;
const int Color_Pink = 12;

const int Color_Orange = 5;
const int Color_LOrange = 14;
const int Color_Yellow = 6;</declaration>
	<template>
		<name>Mirai_Master</name>
		<location id="id0" x="-476" y="-119">
			<name x="-493" y="-153">Initial</name>
			<label kind="invariant" x="-493" y="-111">x&lt;=5</label>
		</location>
		<location id="id1" x="-331" y="-119">
			<name x="-374" y="-153">Setup_Servers</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-425" y="-162">x&gt;=2</label>
			<label kind="synchronisation" x="-425" y="-145">setup!</label>
		</transition>
	</template>
	<template>
		<name>CnC_Server</name>
		<location id="id2" x="-1097" y="-229">
			<name x="-1107" y="-263">Idle</name>
		</location>
		<location id="id3" x="-943" y="-229">
			<name x="-978" y="-263">Pre_Active</name>
		</location>
		<location id="id4" x="-765" y="-229">
			<name x="-782" y="-263">Active</name>
		</location>
		<location id="id5" x="-586" y="-323">
			<name x="-620" y="-306">IM_Stage_1</name>
			<committed/>
		</location>
		<location id="id6" x="-586" y="-136">
			<name x="-620" y="-119">IM_Stage_2</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-731" y="-178">activated?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-578" y="-229">activate_new!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-731" y="-306">new_victim?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-901" y="-254">activate_first!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-1046" y="-254">setup?</label>
		</transition>
	</template>
	<template>
		<name>ScanListen_Server</name>
		<location id="id7" x="-781" y="-221">
			<name x="-791" y="-255">Idle</name>
		</location>
		<location id="id8" x="-620" y="-221">
			<name x="-636" y="-255">Wait</name>
		</location>
		<location id="id9" x="-467" y="-221">
			<name x="-509" y="-255">New_Credentials</name>
			<committed/>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-612" y="-340">!RECORD_EXISTS()</label>
			<label kind="synchronisation" x="-586" y="-297">start_loader!</label>
			<label kind="assignment" x="-629" y="-323">ADD_RECORD(victim_id),</label>
			<nail x="-493" y="-297"/>
			<nail x="-595" y="-297"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-612" y="-144">RECORD_EXISTS()</label>
			<nail x="-493" y="-144"/>
			<nail x="-595" y="-144"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-569" y="-246">report?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-722" y="-246">setup?</label>
		</transition>
	</template>
	<template>
		<name>Loader</name>
		<declaration>clock loader_x;</declaration>
		<location id="id10" x="178" y="-68">
			<name x="152" y="-102">Loaded</name>
			<committed/>
		</location>
		<location id="id11" x="-230" y="-68">
			<name x="-256" y="-102">Standby</name>
		</location>
		<location id="id12" x="-51" y="-68">
			<name x="-77" y="-102">Loading</name>
			<label kind="invariant" x="-85" y="-60">loader_x&lt;=2</label>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-85" y="0">new_victim!</label>
			<nail x="178" y="25"/>
			<nail x="-230" y="25"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-9" y="-110">loader_x&gt;=1</label>
			<label kind="synchronisation" x="-9" y="-93">load_binary[victim_id]!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-187" y="-93">start_loader?</label>
			<label kind="assignment" x="-187" y="-68">loader_x:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_First</name>
		<declaration>clock x1;</declaration>
		<location id="id13" x="-374" y="-34">
			<name x="-400" y="-68">Inactive</name>
		</location>
		<location id="id14" x="-204" y="-34">
			<name x="-221" y="-68">Active</name>
			<urgent/>
		</location>
		<location id="id15" x="-59" y="-110">
			<name x="-110" y="-144">Telnet_Port_Scan</name>
			<label kind="invariant" x="-51" y="-102">x1&lt;=5</label>
		</location>
		<location id="id16" x="93" y="-110">
			<name x="42" y="-144">Victim_Found</name>
			<label kind="invariant" x="42" y="-102">x1&lt;=10</label>
		</location>
		<location id="id17" x="93" y="34">
			<name x="42" y="42">Login_Successful</name>
			<urgent/>
		</location>
		<location id="id18" x="-59" y="34">
			<name x="-84" y="43">Reported</name>
			<committed/>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="assignment" x="0" y="-178">x1:=0</label>
			<nail x="93" y="-178"/>
			<nail x="-59" y="-178"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id15"/>
			<label kind="assignment" x="-51" y="-42">x1:=0</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="0" y="9">report!</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="select" x="102" y="-93">e: bot_id_t</label>
			<label kind="guard" x="102" y="-68">x1&gt;0</label>
			<label kind="synchronisation" x="102" y="-42">dictionary_attack[e]!</label>
			<label kind="assignment" x="102" y="-17">GET_ID()</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="assignment" x="0" y="-110">x1:=0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="assignment" x="-136" y="-68">x1:=0</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-331" y="-59">activate_first?</label>
		</transition>
	</template>
	<template>
		<name>Bot1</name>
		<parameter>const bot_id_t id</parameter>
		<declaration>clock x2;</declaration>
		<location id="id19" x="-484" y="-93">
			<name x="-518" y="-85">Login_Seccessful</name>
		</location>
		<location id="id20" x="-484" y="-263">
			<name x="-518" y="-297">Victim_Found</name>
			<label kind="invariant" x="-552" y="-255">x2&lt;=10</label>
		</location>
		<location id="id21" x="-1139" y="-93">
			<name x="-1173" y="-84">Connected</name>
		</location>
		<location id="id22" x="-969" y="-93">
			<name x="-1003" y="-84">Vulnerable</name>
		</location>
		<location id="id23" x="-739" y="-178">
			<name x="-765" y="-212">Active</name>
		</location>
		<location id="id24" x="-654" y="-263">
			<name x="-714" y="-297">Telnet_Port_Scan</name>
			<label kind="invariant" x="-637" y="-255">x2&lt;=5</label>
		</location>
		<location id="id25" x="-654" y="-93">
			<name x="-680" y="-85">Reported</name>
			<committed/>
		</location>
		<location id="id26" x="-1139" y="-238">
			<name x="-1164" y="-272">Inactive</name>
			<label kind="invariant" x="-1181" y="-230">x2&lt;=5</label>
		</location>
		<location id="id27" x="-824" y="-93">
			<name x="-858" y="-84">Compromised</name>
		</location>
		<init ref="id26"/>
		<transition>
			<source ref="id27"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-782" y="-136">activate_new?</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id21"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id24"/>
			<label kind="assignment" x="-586" y="-348">x2:=0</label>
			<nail x="-484" y="-348"/>
			<nail x="-654" y="-348"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="assignment" x="-646" y="-187">x2:=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-586" y="-119">report!</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="select" x="-476" y="-229">e:bot_id_t</label>
			<label kind="guard" x="-476" y="-212">x2&gt;0</label>
			<label kind="synchronisation" x="-476" y="-187">dictionary_attack[e]!</label>
			<label kind="assignment" x="-476" y="-161">victim_id := e</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id20"/>
			<label kind="assignment" x="-595" y="-263">x2:=0</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-756" y="-238">activated!</label>
			<label kind="assignment" x="-705" y="-212">x2:=0</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-943" y="-119">load_binary[id]?</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-1122" y="-119">dictionary_attack[id]?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
MIRAI = Mirai_Master();
CNC_SRV = CnC_Server();
SCAN_SRV = ScanListen_Server();

LDR = Loader();

BOT_F = Bot_First();

// List one or more processes to be composed into a system.
system MIRAI, CNC_SRV, SCAN_SRV, LDR, BOT_F, Bot1;
    


//************************************************
//Gantt Chart
//************************************************

gantt {

//=====================AGENTS=====================
    //Storage Agent
//    S_Empty:     S.Empty -&gt; Color_Cyan;
    
//=====================SERVERS=====================
    CnC_Server_Active:     CNC_SRV.Active -&gt; Color_Blue;
    Scan_Server_Active:    SCAN_SRV.Wait -&gt; Color_Blue;  
    Loading_Binary:        LDR.Loading -&gt; Color_Purple;

//=====================BOTs=====================

    BOT_DF_Scan:        BOT_F.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_DF_Attacking:   BOT_F.Victim_Found -&gt; Color_Red; 

    Bot1(j:bot_id_t):
          Bot1(j).Connected -&gt; Color_Green,
          Bot1(j).Telnet_Port_Scan -&gt; Color_LOrange,
          Bot1(j).Victim_Found -&gt; Color_Red; 

}</system>
	<queries>
		<query>
			<formula>A[] current_number_bots &lt;= total_devices</formula>
			<comment>check that the counter for the number of bots never exceeds the total number of devices</comment>
		</query>
	</queries>
</nta>
