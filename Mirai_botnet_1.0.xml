<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//***********************************************************
//Variables
//***********************************************************
urgent broadcast chan activate_first, new_victim, activate_new, activated, report, start_loader;
broadcast chan setup;

const int total_devices = 6;                      //the number of devices in the network
const int timeout = 10;                           //the maximum amount of time to wait for a login response

int total_scans = 0;
int total_attempts = 0;
int[0, total_devices] current_number_bots = 0;    //the number of infected devices at any given time

typedef int[1, total_devices] bot_id_t;           //possible values for bot ids (akin to ip addresses)
typedef int[1, total_devices-1] bot_ip_t;
typedef int[101, 111] credentials_t;              //possible values for credentials (akin to username/password combination)

urgent broadcast chan dictionary_attack[total_devices];    //a channel for each device representing the attempted login on that device
urgent broadcast chan login_success[total_devices];        //a channel for each device representing the a successful login response to the attacking bot
broadcast chan load_binary[total_devices];                 //a channel for each device representing the command to begin secondary infection

bot_id_t victim_id;                               //the id of the bot currently being infected
bool in_botnet[total_devices];                    //the list of currently infected bot IDs (the index value is the device id and the value indicates if the device is in the botnet)

credentials_t credential_attempt[total_devices];  //a list to represent passing credentials from attacking bot to device under attack

clock total_time;



//***********************************************************
//Functions
//***********************************************************
bool MATCH(int id){
    return in_botnet[id];
}

void ADD_RECORD(bot_id_t id){
    in_botnet[id] := true;
    current_number_bots += 1;
}

/* bot_id_t CHOOSE_IP(){
    bot_id_t i = 1; 
    for (i; i&lt;=total_devices; i++){
        if (!MATCH(i)){
            total_scans += 1;
            return i;
        }            
    }
    return i;
}
*/


//***********************************************************
//Gantt Color Codes
//***********************************************************
const int Color_Blue = 2;
const int Color_LBlue = 18;
const int Color_Cyan = 9;

const int Color_Purple = 3;
const int Color_DPurple = 20;

const int Color_Green = 8;
const int Color_LGreen = 24;

const int Color_Red = 0;
const int Color_Pink = 12;

const int Color_Orange = 5;
const int Color_LOrange = 14;
const int Color_Yellow = 6;</declaration>
	<template>
		<name>Mirai_Master</name>
		<location id="id0" x="-484" y="-187">
			<name x="-501" y="-221">Initial</name>
			<label kind="invariant" x="-518" y="-178">total_time&lt;=5</label>
		</location>
		<location id="id1" x="-297" y="-187">
			<name x="-340" y="-221">Setup_Servers</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-441" y="-229">total_time&gt;=5</label>
			<label kind="synchronisation" x="-416" y="-212">setup!</label>
		</transition>
	</template>
	<template>
		<name>CnC_Server</name>
		<location id="id2" x="-944" y="-399">
			<name x="-954" y="-433">Idle</name>
		</location>
		<location id="id3" x="-790" y="-399">
			<name x="-825" y="-433">Pre_Active</name>
			<committed/>
		</location>
		<location id="id4" x="-612" y="-399">
			<name x="-629" y="-433">Active</name>
		</location>
		<location id="id5" x="-433" y="-493">
			<name x="-467" y="-476">IM_Stage_1</name>
			<committed/>
		</location>
		<location id="id6" x="-433" y="-306">
			<name x="-467" y="-289">IM_Stage_2</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-578" y="-348">activated?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-425" y="-399">activate_new!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-578" y="-476">new_victim?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-748" y="-424">activate_first!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-893" y="-424">setup?</label>
		</transition>
	</template>
	<template>
		<name>Report_Server</name>
		<location id="id7" x="-781" y="-221">
			<name x="-791" y="-255">Idle</name>
		</location>
		<location id="id8" x="-620" y="-221">
			<name x="-646" y="-255">Wait</name>
		</location>
		<location id="id9" x="-467" y="-221">
			<name x="-509" y="-255">New_Credentials</name>
			<committed/>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-612" y="-340">!in_botnet[victim_id]</label>
			<label kind="synchronisation" x="-586" y="-297">start_loader!</label>
			<label kind="assignment" x="-629" y="-323">ADD_RECORD(victim_id)</label>
			<nail x="-493" y="-297"/>
			<nail x="-595" y="-297"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-612" y="-144">in_botnet[victim_id]</label>
			<nail x="-493" y="-144"/>
			<nail x="-595" y="-144"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-569" y="-221">report?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-722" y="-246">setup?</label>
		</transition>
	</template>
	<template>
		<name>Loader</name>
		<declaration>clock loader_x;</declaration>
		<location id="id10" x="178" y="-68">
			<name x="152" y="-102">Loaded</name>
			<committed/>
		</location>
		<location id="id11" x="-230" y="-68">
			<name x="-256" y="-102">Standby</name>
		</location>
		<location id="id12" x="-51" y="-68">
			<name x="-77" y="-102">Loading</name>
			<label kind="invariant" x="-85" y="-60">loader_x&lt;=2</label>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-85" y="0">new_victim!</label>
			<nail x="178" y="25"/>
			<nail x="-230" y="25"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-8" y="-110">loader_x&gt;=1</label>
			<label kind="synchronisation" x="-9" y="-93">load_binary[victim_id]!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-187" y="-93">start_loader?</label>
			<label kind="assignment" x="-187" y="-68">loader_x:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_Default</name>
		<parameter>const int id, const credentials_t credentials</parameter>
		<declaration>clock x1;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    total_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id13" x="533" y="68">
			<name x="474" y="85">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id14" x="533" y="-119">
			<name x="490" y="-154">Victim_Found</name>
			<committed/>
		</location>
		<location id="id15" x="83" y="-119">
			<name x="59" y="-153">Active</name>
			<committed/>
		</location>
		<location id="id16" x="253" y="-119">
			<name x="194" y="-153">Telnet_Port_Scan</name>
			<label kind="invariant" x="202" y="-110">x1&lt;=1</label>
		</location>
		<location id="id17" x="-85" y="-119">
			<name x="-119" y="-153">Inactive</name>
		</location>
		<location id="id18" x="788" y="-119">
			<name x="737" y="-102">Attack_Attempted</name>
			<label kind="invariant" x="797" y="-85">x1&lt;=1</label>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id13"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="363" y="43">report!</label>
			<nail x="253" y="68"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id16"/>
			<label kind="guard" x="329" y="-34">attack_attempts&gt;=10</label>
			<label kind="assignment" x="363" y="0">x1:=0</label>
			<nail x="491" y="-8"/>
			<nail x="295" y="-8"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id14"/>
			<label kind="guard" x="644" y="-255">x1&gt;=1</label>
			<nail x="788" y="-229"/>
			<nail x="533" y="-229"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id14"/>
			<label kind="select" x="348" y="-161">ip_sel:bot_ip_t</label>
			<label kind="guard" x="372" y="-144">x1&gt;=1</label>
			<label kind="assignment" x="321" y="-119">target_ip:=ip_sel, 
total_scans++,
x1:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id18"/>
			<label kind="select" x="603" y="-178">cd_sel:credentials_t</label>
			<label kind="guard" x="603" y="-161">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="576" y="-144">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="595" y="-119">target_cd:=cd_sel,
x1:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="601" y="42">login_success[target_ip]?</label>
			<label kind="assignment" x="618" y="68">victim_id:=target_ip</label>
			<nail x="788" y="68"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-51" y="-144">activate_first?</label>
			<label kind="assignment" x="-59" y="-119">in_botnet[0]:=true</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="assignment" x="142" y="-119">x1:=0</label>
		</transition>
	</template>
	<template>
		<name>Bot_t1</name>
		<parameter>const bot_id_t ip, const credentials_t credentials</parameter>
		<declaration>clock x2;
int[0, 10] attack_attempts;
bot_ip_t target_ip;
credentials_t target_cd;

bool credential_match(){
    return credentials == credential_attempt[ip];
}

void exploit_credential(credentials_t target_cd){
    attack_attempts += 1;
    total_attempts += 1;
    credential_attempt[target_ip] = target_cd;
}</declaration>
		<location id="id19" x="-1564" y="-153">
			<name x="-1623" y="-136">Attack_Successful</name>
			<committed/>
		</location>
		<location id="id20" x="-1564" y="-340">
			<name x="-1607" y="-375">Victim_Found</name>
			<committed/>
		</location>
		<location id="id21" x="-2329" y="-569">
			<name x="-2363" y="-603">Connected</name>
		</location>
		<location id="id22" x="-2329" y="-340">
			<name x="-2363" y="-323">Vulnerable</name>
		</location>
		<location id="id23" x="-2014" y="-340">
			<name x="-2032" y="-324">Active</name>
			<committed/>
		</location>
		<location id="id24" x="-1844" y="-340">
			<name x="-1903" y="-374">Telnet_Port_Scan</name>
			<label kind="invariant" x="-1895" y="-331">x2&lt;=1</label>
		</location>
		<location id="id25" x="-2014" y="-569">
			<name x="-2039" y="-603">Inactive</name>
			<label kind="invariant" x="-2074" y="-569">x2&lt;=5</label>
		</location>
		<location id="id26" x="-2167" y="-340">
			<name x="-2210" y="-323">Compromised</name>
		</location>
		<location id="id27" x="-1309" y="-340">
			<name x="-1360" y="-323">Attack_Attempted</name>
			<label kind="invariant" x="-1300" y="-306">x2&lt;=1</label>
		</location>
		<location id="id28" x="-2329" y="-450">
			<name x="-2380" y="-433">Login_Successful</name>
			<committed/>
		</location>
		<init ref="id25"/>
		<transition>
			<source ref="id28"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-2320" y="-408">login_success[ip]!</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-1734" y="-178">report!</label>
			<nail x="-1844" y="-153"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id24"/>
			<label kind="guard" x="-1768" y="-255">attack_attempts&gt;=10</label>
			<label kind="assignment" x="-1734" y="-221">x2:=0</label>
			<nail x="-1606" y="-229"/>
			<nail x="-1802" y="-229"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id20"/>
			<label kind="guard" x="-1453" y="-476">x2&gt;=1</label>
			<nail x="-1309" y="-450"/>
			<nail x="-1564" y="-450"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id20"/>
			<label kind="select" x="-1751" y="-382">ip_sel:bot_ip_t</label>
			<label kind="guard" x="-1725" y="-365">x2&gt;=1</label>
			<label kind="assignment" x="-1776" y="-340">target_ip:=ip_sel, 
total_scans++,
x2:=0,
attack_attempts:=0</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id27"/>
			<label kind="select" x="-1496" y="-399">cd_sel:credentials_t</label>
			<label kind="guard" x="-1496" y="-382">attack_attempts&lt;10</label>
			<label kind="synchronisation" x="-1521" y="-365">dictionary_attack[target_ip]!</label>
			<label kind="assignment" x="-1496" y="-340">target_cd:=cd_sel,
x2:=0,
exploit_credential(target_cd)</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-1496" y="-178">login_success[target_ip]?</label>
			<label kind="assignment" x="-1479" y="-153">victim_id:=target_ip</label>
			<nail x="-1309" y="-153"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id28"/>
			<label kind="guard" x="-2320" y="-535">credential_match()</label>
			<label kind="synchronisation" x="-2320" y="-518">dictionary_attack[ip]?</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-2133" y="-365">activate_new?</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id21"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-1972" y="-365">activated!</label>
			<label kind="assignment" x="-1955" y="-340">x2:=0</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="-2303" y="-365">load_binary[ip]?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
MIRAI = Mirai_Master();
CNC_SRV = CnC_Server();
RPT_SRV = Report_Server();

LDR = Loader();

BOT_DF = Bot_Default(0,110);

BOT1 = Bot_t1(4,101);
BOT2 = Bot_t1(1,109);
BOT3 = Bot_t1(3,103);
BOT4 = Bot_t1(5,103);
BOT5 = Bot_t1(2,108);


// List one or more processes to be composed into a system.
system MIRAI, CNC_SRV, RPT_SRV, LDR, BOT_DF, BOT1, BOT2, BOT3, BOT4, BOT5;
    


//************************************************
//Gantt Chart
//************************************************

gantt {
    
//========================SERVERS========================
    CnC_Server_Active:     CNC_SRV.Active -&gt; Color_Blue;
    Scan_Server_Active:    RPT_SRV.Wait -&gt; Color_Blue;  
    Loading_Binary:        LDR.Loading -&gt; Color_Purple;

//============================BOTs===============================
    BOT_DF_Scanning:    BOT_DF.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_DF_Attacking:   BOT_DF.Attack_Attempted -&gt; Color_Red; 

    BOT_1_safe:         BOT1.Connected -&gt; Color_Green;
    BOT_1_Scanning:     BOT1.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_1_Attacking:    BOT1.Attack_Attempted -&gt; Color_Red;

    BOT_2_safe:         BOT2.Connected -&gt; Color_Green;
    BOT_2_Scanning:     BOT2.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_2_Attacking:    BOT2.Attack_Attempted -&gt; Color_Red;

    BOT_3_safe:         BOT3.Connected -&gt; Color_Green;
    BOT_3_Scanning:     BOT3.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_3_Attacking:    BOT3.Attack_Attempted -&gt; Color_Red;

    BOT_4_safe:         BOT4.Connected -&gt; Color_Green;
    BOT_4_Scanning:     BOT4.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_4_Attacking:    BOT4.Attack_Attempted -&gt; Color_Red;

    BOT_5_safe:         BOT5.Connected -&gt; Color_Green;
    BOT_5_Scanning:     BOT5.Telnet_Port_Scan -&gt; Color_LOrange;
    BOT_5_Attacking:    BOT5.Attack_Attempted -&gt; Color_Red;
}</system>
	<queries>
		<query>
			<formula>A[] !deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] deadlock imply current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] total_time==50 imply current_number_bots+==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; current_number_bots==total_devices-1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=100] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=50] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=50; 15] {BOT_DF.Telnet_Port_Scan, BOT_DF.Victim_Found}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate[&lt;=50] {in_botnet[1]}</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2])</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;in_botnet[1] &amp;&amp; in_botnet[2] &amp;&amp; in_botnet[3])</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==1)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==2)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==3)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25; 500] (&lt;&gt;current_number_bots==4)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>Pr[&lt;=25] (&lt;&gt;current_number_bots==5)</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
